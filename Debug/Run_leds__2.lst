
Run_leds__2.elf:     file format elf32-littleriscv
Run_leds__2.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x80000000

Program Header:
0x70000003 off    0x0003e56b vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x00000041 memsz 0x00000000 flags r--
    LOAD off    0x00000000 vaddr 0x4003f000 paddr 0x4003f000 align 2**12
         filesz 0x000000f4 memsz 0x00001000 flags rw-
    LOAD off    0x00001000 vaddr 0x80000000 paddr 0x80000000 align 2**12
         filesz 0x00001e18 memsz 0x00001e18 flags r-x
    LOAD off    0x00003000 vaddr 0x40000000 paddr 0x80001e18 align 2**12
         filesz 0x00000110 memsz 0x0000012c flags rw-
    LOAD off    0x0000012c vaddr 0x4000012c paddr 0x80001f28 align 2**12
         filesz 0x00000000 memsz 0x00000078 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .text.startup     00000108  80000000  80000000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text.crt         00000184  80000140  80000140  00001140  2**6  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             000018cc  800002c4  800002c4  000012c4  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .tbss             00000000  80001b90  80001b90  00000000  2**2  ALLOC, THREAD_LOCAL
  4 .rodata           00000264  80001b90  80001b90  00002b90  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .srodata          00000020  80001df8  80001df8  00002df8  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .sdata            00000010  40000000  80001e18  00003000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .data             00000100  40000010  80001e28  00003010  2**2  CONTENTS, ALLOC, LOAD, DATA
  8 .sbss             0000001c  40000110  80001f28  00003110  2**2  ALLOC
  9 .bss              00000078  4000012c  80001f28  0000312c  2**2  ALLOC
 10 .stack            00000800  4003f800  4003f800  00000800  2**0  ALLOC
 11 .debug_info       0000c2a7  00000000  00000000  00003110  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev     00000bb0  00000000  00000000  0000f3b7  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists   000006b9  00000000  00000000  0000ff67  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges    00000138  00000000  00000000  00010620  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists   000000ec  00000000  00000000  00010758  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line       000020ad  00000000  00000000  00010844  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str        0002b8fb  00000000  00000000  000128f1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str   0000036d  00000000  00000000  0003e1ec  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment          00000012  00000000  00000000  0003e559  2**0  CONTENTS, READONLY
 20 .riscv.attributes 00000041  00000000  00000000  0003e56b  2**0  CONTENTS, READONLY
 21 .debug_frame      00000354  00000000  00000000  0003e5ac  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro      00011392  00000000  00000000  0003e900  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
80000000 l    d  .text.startup	00000000 .text.startup
80000140 l    d  .text.crt	00000000 .text.crt
800002c4 l    d  .text	00000000 .text
80001b90 l    d  .tbss	00000000 .tbss
80001b90 l    d  .rodata	00000000 .rodata
80001df8 l    d  .srodata	00000000 .srodata
40000000 l    d  .sdata	00000000 .sdata
40000010 l    d  .data	00000000 .data
40000110 l    d  .sbss	00000000 .sbss
4000012c l    d  .bss	00000000 .bss
4003f800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 startup_k1921vg015.o
800002c4 l     F .text	0000001a PLIC_SetIrqHandler
40000090 l     O .data	00000080 mach_plic_handler
40000010 l     O .data	00000080 supervisor_plic_handler
800002de l     F .text	0000000c PLIC_SetPriority
800002ea l     F .text	0000002a PLIC_IntEnable
80000314 l     F .text	00000012 PLIC_ClaimIrq
80000326 l     F .text	00000012 PLIC_ClaimComplete
80000338 l     F .text	00000012 PLIC_SetThreshold
8000034a l     F .text	0000002a PLIC_MachHandler
80000374 l     F .text	00000008 PutChar
8000037c l     F .text	00000018 PutString
80000394 l     F .text	00000082 PutUnsignedInt
80000416 l     F .text	000000d2 PutSignedInt
800004e8 l     F .text	0000008a PutHexa
80000572 l     F .text	00000166 vsnprintf
800006d8 l     F .text	00000014 vsprintf
800006ec l     F .text	000000dc SystemCoreClockUpdate
40000128 l     O .sbss	00000004 SystemPll0Clock
40000124 l     O .sbss	00000004 SystemPll1Clock
40000120 l     O .sbss	00000004 SystemCoreClock
800007c8 l     F .text	000000e6 ClkInit
800008ae l     F .text	00000026 InterruptEnable
800008d4 l     F .text	0000000c SystemInit
800008e0 l     F .text	0000006c BSP_led_init
8000094c l     F .text	00000054 TMR32_init
80000c1e l     F .text	00000160 TMR32_IRQHandler
800009a0 l     F .text	00000098 UART1_init
80000a38 l     F .text	00000076 update_leds
4000000c l     O .sdata	00000004 button_click_counter
4000011c l     O .sbss	00000004 led_shift
80000aae l     F .text	0000006c retarget_init
80000b1a l     F .text	00000016 retarget_put_char
80000b30 l     F .text	00000032 Send_buff
80000b62 l     F .text	0000001c sprintf
80000b7e l     F .text	000000a0 periph_init
4000012c l     O .bss	00000078 buff
40000118 l     O .sbss	00000004 cnt_tgl_meows
40000004 l     O .sdata	00000004 Ysm.3
40000001 l     O .sdata	00000001 button_state.2
40000000 l     O .sdata	00000001 prev_button_state.1
40000110 l     O .sbss	00000004 last_led_update.0
40000008 l     O .sdata	00000004 flag_meows
40000114 l     O .sbss	00000004 meows_barks_counter
800000b0 l     F .text.startup	00000058 plf_init_generic
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-memcpy.o
00000000 l    df *ABS*	00000000 divdf3.o
00000000 l    df *ABS*	00000000 fixdfsi.o
00000000 l    df *ABS*	00000000 floatunsidf.o
00000000 l    df *ABS*	00000000 _clzsi2.o
00000f4a  w      .debug_info	00000000 .hidden printf.c.48218671
00000800 g       *ABS*	00000000 STACK_SIZE
40000780 g       *ABS*	00000000 __global_pointer$
40040000 g       .stack	00000000 __TLS0_BASE__
8000008c g       .text.startup	00000000 _hart_halt
40000000 g       .sdata	00000000 __SDATA_BEGIN__
80000e74 g     F .text	000000ec memcpy
40000010 g       .sdata	00000000 __sdata_target_end
4003f800 g       *ABS*	00000000 _heap_end
400001a4 g       .bss	00000000 __bss_end
800000a0  w      .text.startup	00000000 abort
80001ab2 g     F .text	00000070 .hidden __floatunsidf
000047a0  w      .debug_info	00000000 .hidden main.c.6a153617
40000110 g       .data	00000000 __data_target_end
800019cc g     F .text	000000e6 .hidden __fixdfsi
400001b0 g       *ABS*	00000000 _heap_start
80000d7e g     F .text	00000018 trap_handler
80001b22 g     F .text	0000006e .hidden __clzsi2
80000000 g       *ABS*	00000000 __TEXT_INIT_START__
80000000 g       .text.startup	00000000 _start
80001e18 g       *ABS*	00000000 __sdata_source_start
80000f60 g     F .text	00000a6c .hidden __divdf3
00000bac  w      .debug_info	00000000 .hidden plic.c.21d8f78f
400001a4 g       .bss	00000000 __BSS_END__
00000108 g       *ABS*	00000000 __TEXT_INIT_SIZE__
800000a4  w      .text.startup	00000000 app_init
40000110 g       .sbss	00000000 __bss_start
80000dcc g     F .text	000000a8 memset
80000d96 g     F .text	00000036 main
80000140  w    F .text.crt	0000014c trap_entry
40000010 g       .data	00000000 __data_target_start
80001c68 g     O .rodata	00000100 .hidden __clz_tab
40000000 g       .sdata	00000000 __sdata_target_start
800000b0 g     F .text.startup	00000058 plf_init
40000010 g       .data	00000000 __DATA_BEGIN__
000092a1  w      .debug_info	00000000 .hidden retarget.c.918a4a7b
00001c1e  w      .debug_info	00000000 .hidden system_k1921vg015.c.08e00f8f
40000110 g       .data	00000000 _edata
8000009c  w      .text.startup	00000000 exit
80001b90 g       .text	00000000 _tdata_start
00001ac0  w      .debug_info	00000000 .hidden sys_init.c.d9db5e6f
80001b90 g       .tbss	00000000 _tbss_end
00000000 g       *ABS*	00000000 __TLS_SIZE__
80001e28 g       *ABS*	00000000 __data_source_start
4003f800 g       .stack	00000000 __STACK_START__



Disassembly of section .text.startup:

80000000 <_start>:
_start():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:22
    .section ".startup.entry","ax",@progbits

    ## Entry point
_start:
    ## reset mstatus
    csrw  mstatus, zero
80000000:	30001073          	csrw	mstatus,zero
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:24
    ## reset PMURTC->RTC_HISTORY
    lui     s1,0x38011
80000004:	380114b7          	lui	s1,0x38011
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:25
    sw      zero,8(s1) 
80000008:	0004a423          	sw	zero,8(s1) # 38011008 <retarget.c.918a4a7b+0x38007d67>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:34
    init_regs_const 16, 31, 0
#endif // !__riscv_32e
#endif // PLF_INIT_REGS

    ## setup gp
    load_addrword_abs gp, __global_pointer$
8000000c:	400001b7          	lui	gp,0x40000
80000010:	78018193          	addi	gp,gp,1920 # 40000780 <__global_pointer$>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:36
    ## setup MTVEC
    load_addrword_abs t0, trap_entry
80000014:	800002b7          	lui	t0,0x80000
80000018:	14028293          	addi	t0,t0,320 # 80000140 <trap_entry>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:37
    csrw  mtvec, t0
8000001c:	30529073          	csrw	mtvec,t0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:41
    ## setup MIE, MIP


    csrw  mie, zero
80000020:	30401073          	csrw	mie,zero
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:42
    csrw  mip, zero
80000024:	34401073          	csrw	mip,zero
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:52
    load_const_int32 t1, __TEXT_INIT_SIZE__
    cache_flush t0, t1
#endif // PLF_CACHE_CFG

    ## init FPU (if supported)
    csrr  a0, misa
80000028:	30102573          	csrr	a0,misa
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:53
    andi  a0, a0, (1 << ('F' - 'A')) | (1 << ('D' - 'A'))
8000002c:	02857513          	andi	a0,a0,40
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:54
    beqz  a0, 1f
80000030:	00050863          	beqz	a0,80000040 <_start+0x40>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:55
    li    a0, (1 << 13) // mstatus.FS = 1 (initial)
80000034:	00002537          	lui	a0,0x2
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:56
    csrs  mstatus, a0
80000038:	30052073          	csrs	mstatus,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:57
    csrw  fcsr, zero
8000003c:	00301073          	fscsr	zero
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:67
#else
#define slave_hart_start _hart_halt
#endif // PLF_SMP_SUPPORT

    ## park/prep SMP slaves
    csrr  a0, mhartid
80000040:	f1402573          	csrr	a0,mhartid
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:76
#if PLF_SMP_MASTER_HARTID > 0
    li    t0, PLF_SMP_MASTER_HARTID
    bne   a0, t0, slave_hart_start
#endif // PLF_SMP_MASTER_HARTID > 0
#else // PLF_SMP_MASTER_HARTID
    bnez  a0, slave_hart_start
80000044:	04051463          	bnez	a0,8000008c <_hart_halt>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:80
#endif // PLF_SMP_MASTER_HARTID

    ## init HART#0 sp, tp
    load_addrword_abs sp, __TLS0_BASE__
80000048:	40040137          	lui	sp,0x40040
8000004c:	00010113          	mv	sp,sp
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:81
    mv    tp, sp
80000050:	00010213          	mv	tp,sp
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:82
    csrw  mscratch, sp
80000054:	34011073          	csrw	mscratch,sp
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:89
    // reserve trap stack space
    li    t0, PLF_TRAP_STACK
    sub   sp, sp, t0
#endif // PLF_TRAP_STACK
    ## platform init
    load_addrword t0, plf_init
80000058:	800002b7          	lui	t0,0x80000
8000005c:	0b028293          	addi	t0,t0,176 # 800000b0 <plf_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:90
    jalr  t0
80000060:	000280e7          	jalr	t0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:93
    ## jal  plf_init
    ## application-specific initialization hook
    load_addrword t0, app_init
80000064:	800002b7          	lui	t0,0x80000
80000068:	0a428293          	addi	t0,t0,164 # 800000a4 <app_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:94
    jalr  t0
8000006c:	000280e7          	jalr	t0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:97
    ## jal  app_init
    ## main() args
    li    a0, 0
80000070:	00000513          	li	a0,0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:98
    li    a1, 0
80000074:	00000593          	li	a1,0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:110
#if PLF_SMP_NON_COHERENT
    clflush t1
#endif // PLF_SMP_NON_COHERENT
#endif // PLF_SMP_SUPPORT
    ## start main
    load_addrword t0, main
80000078:	800012b7          	lui	t0,0x80001
8000007c:	d9628293          	addi	t0,t0,-618 # 80000d96 <main>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:111
    load_addrword ra, exit
80000080:	800000b7          	lui	ra,0x80000
80000084:	09c08093          	addi	ra,ra,156 # 8000009c <exit>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:112
    jr    t0
80000088:	00028067          	jr	t0

8000008c <_hart_halt>:
_hart_halt():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:159
1:  wfi
    j     1b
#endif // PLF_SMP_SUPPORT
#else // PLF_HTIF_BASE
    ## disable interrupts
    csrci mstatus, 0xf
8000008c:	3007f073          	csrci	mstatus,15
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:160
    csrw  mie, zero
80000090:	30401073          	csrw	mie,zero
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:161
1:  wfi
80000094:	10500073          	wfi
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:162
    j     1b
80000098:	ffdff06f          	j	80000094 <_hart_halt+0x8>

8000009c <exit>:
exit():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:166
#endif // PLF_HTIF_BASE

exit:
    nop
8000009c:	00000013          	nop

800000a0 <abort>:
abort():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:168
abort:
    j     _hart_halt
800000a0:	fedff06f          	j	8000008c <_hart_halt>

800000a4 <app_init>:
app_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:216
    jr    t0
#endif // PLF_SMP_SUPPORT

    ## stubs
app_init:
    ret
800000a4:	00008067          	ret
	...

800000b0 <plf_init>:
plf_init_generic():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:30
{
    // do nothing
}

void __init plf_init_generic(void)
{
800000b0:	1141                	addi	sp,sp,-16 # 4003fff0 <__STACK_START__+0x7f0>
800000b2:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:32
    // init BSS
    memset(__bss_start, 0, (size_t)(__bss_end - __bss_start));
800000b4:	99018613          	addi	a2,gp,-1648 # 40000110 <last_led_update.0>
800000b8:	a2418793          	addi	a5,gp,-1500 # 400001a4 <__BSS_END__>
800000bc:	40c78633          	sub	a2,a5,a2
800000c0:	4581                	li	a1,0
800000c2:	99018513          	addi	a0,gp,-1648 # 40000110 <last_led_update.0>
800000c6:	507000ef          	jal	80000dcc <memset>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:36

    memcpy((void*)&__data_target_start,
           (const void*)&__data_source_start,
           (&__data_target_end - &__data_target_start));
800000ca:	89018613          	addi	a2,gp,-1904 # 40000010 <supervisor_plic_handler>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:34
    memcpy((void*)&__data_target_start,
800000ce:	99018793          	addi	a5,gp,-1648 # 40000110 <last_led_update.0>
800000d2:	40c78633          	sub	a2,a5,a2
800000d6:	800025b7          	lui	a1,0x80002
800000da:	e2858593          	addi	a1,a1,-472 # 80001e28 <__data_source_start>
800000de:	89018513          	addi	a0,gp,-1904 # 40000010 <supervisor_plic_handler>
800000e2:	593000ef          	jal	80000e74 <memcpy>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:40

    memcpy((void*)&__sdata_target_start,
              (const void*)&__sdata_source_start,
              (&__sdata_target_end - &__sdata_target_start));
800000e6:	88018613          	addi	a2,gp,-1920 # 40000000 <prev_button_state.1>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:38
    memcpy((void*)&__sdata_target_start,
800000ea:	89018793          	addi	a5,gp,-1904 # 40000010 <supervisor_plic_handler>
800000ee:	40c78633          	sub	a2,a5,a2
800000f2:	800025b7          	lui	a1,0x80002
800000f6:	e1858593          	addi	a1,a1,-488 # 80001e18 <__sdata_source_start>
800000fa:	88018513          	addi	a0,gp,-1920 # 40000000 <prev_button_state.1>
800000fe:	577000ef          	jal	80000e74 <memcpy>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/sys_init.c:41
}
80000102:	40b2                	lw	ra,12(sp)
80000104:	0141                	addi	sp,sp,16
80000106:	8082                	ret

Disassembly of section .text.crt:

80000140 <trap_entry>:
trap_entry():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:250
    .section ".text.crt.trap_entry","ax",@progbits
    .align 6
    .type trap_entry, @function
trap_entry:
    ## save context
    context_save
80000140:	fe512e23          	sw	t0,-4(sp)
80000144:	00010293          	mv	t0,sp
80000148:	f8010113          	addi	sp,sp,-128
8000014c:	ff017113          	andi	sp,sp,-16
80000150:	00112223          	sw	ra,4(sp)
80000154:	00512423          	sw	t0,8(sp)
80000158:	ffc2a283          	lw	t0,-4(t0)
8000015c:	00312623          	sw	gp,12(sp)
80000160:	00412823          	sw	tp,16(sp)
80000164:	00512a23          	sw	t0,20(sp)
80000168:	00612c23          	sw	t1,24(sp)
8000016c:	00712e23          	sw	t2,28(sp)
80000170:	02812023          	sw	s0,32(sp)
80000174:	02912223          	sw	s1,36(sp)
80000178:	02a12423          	sw	a0,40(sp)
8000017c:	02b12623          	sw	a1,44(sp)
80000180:	02c12823          	sw	a2,48(sp)
80000184:	02d12a23          	sw	a3,52(sp)
80000188:	02e12c23          	sw	a4,56(sp)
8000018c:	02f12e23          	sw	a5,60(sp)
80000190:	05012023          	sw	a6,64(sp)
80000194:	05112223          	sw	a7,68(sp)
80000198:	05212423          	sw	s2,72(sp)
8000019c:	05312623          	sw	s3,76(sp)
800001a0:	05412823          	sw	s4,80(sp)
800001a4:	05512a23          	sw	s5,84(sp)
800001a8:	05612c23          	sw	s6,88(sp)
800001ac:	05712e23          	sw	s7,92(sp)
800001b0:	07812023          	sw	s8,96(sp)
800001b4:	07912223          	sw	s9,100(sp)
800001b8:	07a12423          	sw	s10,104(sp)
800001bc:	07b12623          	sw	s11,108(sp)
800001c0:	07c12823          	sw	t3,112(sp)
800001c4:	07d12a23          	sw	t4,116(sp)
800001c8:	07e12c23          	sw	t5,120(sp)
800001cc:	07f12e23          	sw	t6,124(sp)
800001d0:	34002273          	csrr	tp,mscratch
800001d4:	34102373          	csrr	t1,mepc
800001d8:	00612023          	sw	t1,0(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:252
    ## save mstatus priv stack
    csrr s0, mstatus
800001dc:	30002473          	csrr	s0,mstatus
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:254
    ## load trap handler args
    csrr a0, mcause
800001e0:	34202573          	csrr	a0,mcause
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:255
    csrr a1, mepc
800001e4:	341025f3          	csrr	a1,mepc
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:256
    mv   a2, sp
800001e8:	00010613          	mv	a2,sp
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:259

    ## setup gp
    load_addrword_abs gp, __global_pointer$
800001ec:	400001b7          	lui	gp,0x40000
800001f0:	78018193          	addi	gp,gp,1920 # 40000780 <__global_pointer$>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:261
    ## call trap handler
    load_addrword t0, trap_handler
800001f4:	800012b7          	lui	t0,0x80001
800001f8:	d7e28293          	addi	t0,t0,-642 # 80000d7e <trap_handler>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:262
    jalr t0
800001fc:	000280e7          	jalr	t0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:265

    ## restore mstatus priv stack
    csrw mstatus, s0
80000200:	30041073          	csrw	mstatus,s0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:267
    ## restore context
    context_restore
80000204:	00012303          	lw	t1,0(sp)
80000208:	34131073          	csrw	mepc,t1
8000020c:	00c12183          	lw	gp,12(sp)
80000210:	01012203          	lw	tp,16(sp)
80000214:	01412283          	lw	t0,20(sp)
80000218:	01812303          	lw	t1,24(sp)
8000021c:	01c12383          	lw	t2,28(sp)
80000220:	02012403          	lw	s0,32(sp)
80000224:	02412483          	lw	s1,36(sp)
80000228:	02812503          	lw	a0,40(sp)
8000022c:	02c12583          	lw	a1,44(sp)
80000230:	03012603          	lw	a2,48(sp)
80000234:	03412683          	lw	a3,52(sp)
80000238:	03812703          	lw	a4,56(sp)
8000023c:	03c12783          	lw	a5,60(sp)
80000240:	04012803          	lw	a6,64(sp)
80000244:	04412883          	lw	a7,68(sp)
80000248:	04812903          	lw	s2,72(sp)
8000024c:	04c12983          	lw	s3,76(sp)
80000250:	05012a03          	lw	s4,80(sp)
80000254:	05412a83          	lw	s5,84(sp)
80000258:	05812b03          	lw	s6,88(sp)
8000025c:	05c12b83          	lw	s7,92(sp)
80000260:	06012c03          	lw	s8,96(sp)
80000264:	06412c83          	lw	s9,100(sp)
80000268:	06812d03          	lw	s10,104(sp)
8000026c:	06c12d83          	lw	s11,108(sp)
80000270:	07012e03          	lw	t3,112(sp)
80000274:	07412e83          	lw	t4,116(sp)
80000278:	07812f03          	lw	t5,120(sp)
8000027c:	07c12f83          	lw	t6,124(sp)
80000280:	00412083          	lw	ra,4(sp)
80000284:	00812103          	lw	sp,8(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/startup_k1921vg015.S:268
    mret
80000288:	30200073          	mret
	...

Disassembly of section .text:

800002c4 <PLIC_SetIrqHandler>:
PLIC_SetIrqHandler():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:53
 * Set PLIC handler function for isr num
 */

void PLIC_SetIrqHandler (uint8_t target, uint32_t isr_num, irqfunc* func)
{
    if(target == Plic_Mach_Target) {
800002c4:	e519                	bnez	a0,800002d2 <PLIC_SetIrqHandler+0xe>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:54
        mach_plic_handler[isr_num] = func;
800002c6:	058a                	slli	a1,a1,0x2
800002c8:	91018793          	addi	a5,gp,-1776 # 40000090 <mach_plic_handler>
800002cc:	97ae                	add	a5,a5,a1
800002ce:	c390                	sw	a2,0(a5)
800002d0:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:56
    } else {
        supervisor_plic_handler[isr_num] = func;
800002d2:	058a                	slli	a1,a1,0x2
800002d4:	89018793          	addi	a5,gp,-1904 # 40000010 <supervisor_plic_handler>
800002d8:	97ae                	add	a5,a5,a1
800002da:	c390                	sw	a2,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:58
    }
}
800002dc:	8082                	ret

800002de <PLIC_SetPriority>:
PLIC_SetPriority():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:65
 * Set PLIC irq priority
 */

void PLIC_SetPriority (uint32_t isr_num, uint8_t pri)
{
    PLIC->PRI[isr_num] = pri;
800002de:	050a                	slli	a0,a0,0x2
800002e0:	0c0007b7          	lui	a5,0xc000
800002e4:	97aa                	add	a5,a5,a0
800002e6:	c38c                	sw	a1,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:66
}
800002e8:	8082                	ret

800002ea <PLIC_IntEnable>:
PLIC_IntEnable():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:87
{
	uint32_t value;

	//read - modify - write operation

    if(target == Plic_Mach_Target) {
800002ea:	e911                	bnez	a0,800002fe <PLIC_IntEnable+0x14>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:88
    	value  = PLIC->MIEM0;
800002ec:	0c002737          	lui	a4,0xc002
800002f0:	4314                	lw	a3,0(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:89
    	value |= (1<<isr_num);
800002f2:	4785                	li	a5,1
800002f4:	00b797b3          	sll	a5,a5,a1
800002f8:	8fd5                	or	a5,a5,a3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:90
    	PLIC->MIEM0 = value;
800002fa:	c31c                	sw	a5,0(a4)
800002fc:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:92
    } else {
    	value = PLIC->UIEM0;
800002fe:	0c002737          	lui	a4,0xc002
80000302:	08072683          	lw	a3,128(a4) # c002080 <retarget.c.918a4a7b+0xbff8ddf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:93
    	value |= (1<<isr_num);
80000306:	4785                	li	a5,1
80000308:	00b797b3          	sll	a5,a5,a1
8000030c:	8fd5                	or	a5,a5,a3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:94
    	PLIC->UIEM0 = value;
8000030e:	08f72023          	sw	a5,128(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:96
    }
}
80000312:	8082                	ret

80000314 <PLIC_ClaimIrq>:
PLIC_ClaimIrq():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:125
 * Get current isr number
 */

uint32_t PLIC_ClaimIrq (uint8_t target)
{
	if(target == Plic_Mach_Target) {
80000314:	e509                	bnez	a0,8000031e <PLIC_ClaimIrq+0xa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:126
		return (uint32_t)(PLIC->MICC);
80000316:	0c2007b7          	lui	a5,0xc200
8000031a:	43c8                	lw	a0,4(a5)
8000031c:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:128
	} else {
		return (uint32_t)(PLIC->UICC);
8000031e:	0c2017b7          	lui	a5,0xc201
80000322:	43c8                	lw	a0,4(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:130
	}
}
80000324:	8082                	ret

80000326 <PLIC_ClaimComplete>:
PLIC_ClaimComplete():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:138
 * Set current isr as completed
 */

void PLIC_ClaimComplete (uint8_t target, uint32_t isrnum)
{
	if(target == Plic_Mach_Target) {
80000326:	e509                	bnez	a0,80000330 <PLIC_ClaimComplete+0xa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:139
		PLIC->MICC = isrnum;
80000328:	0c2007b7          	lui	a5,0xc200
8000032c:	c3cc                	sw	a1,4(a5)
8000032e:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:141
	} else {
		PLIC->UICC = isrnum;
80000330:	0c2017b7          	lui	a5,0xc201
80000334:	c3cc                	sw	a1,4(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:143
	}
}
80000336:	8082                	ret

80000338 <PLIC_SetThreshold>:
PLIC_SetThreshold():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:150
/*
 * Set threshold for irqs
 */

void PLIC_SetThreshold(uint8_t target, uint32_t value) {
	if(target == Plic_Mach_Target) {
80000338:	e509                	bnez	a0,80000342 <PLIC_SetThreshold+0xa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:151
		PLIC->MTHR = value;
8000033a:	0c2007b7          	lui	a5,0xc200
8000033e:	c38c                	sw	a1,0(a5)
80000340:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:153
	} else {
		PLIC->UTHR = value;
80000342:	0c2017b7          	lui	a5,0xc201
80000346:	c38c                	sw	a1,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:155
	}
}
80000348:	8082                	ret

8000034a <PLIC_MachHandler>:
PLIC_MachHandler():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:158


void PLIC_MachHandler(void) {
8000034a:	1141                	addi	sp,sp,-16
8000034c:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:161

	// handle interrupt
	uint32_t isr_num = PLIC_ClaimIrq(Plic_Mach_Target);
8000034e:	4501                	li	a0,0
80000350:	37d1                	jal	80000314 <PLIC_ClaimIrq>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:163
	// check if handler exist
	if(mach_plic_handler[isr_num] != NULL_IRQ) {
80000352:	00251713          	slli	a4,a0,0x2
80000356:	91018793          	addi	a5,gp,-1776 # 40000090 <mach_plic_handler>
8000035a:	97ba                	add	a5,a5,a4
8000035c:	439c                	lw	a5,0(a5)
8000035e:	cb81                	beqz	a5,8000036e <PLIC_MachHandler+0x24>
80000360:	c422                	sw	s0,8(sp)
80000362:	842a                	mv	s0,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:165
		// call isr handler
		mach_plic_handler[isr_num]();
80000364:	9782                	jalr	a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:167
		// set isr completes
		PLIC_ClaimComplete(Plic_Mach_Target, isr_num);
80000366:	85a2                	mv	a1,s0
80000368:	4501                	li	a0,0
8000036a:	3f75                	jal	80000326 <PLIC_ClaimComplete>
8000036c:	4422                	lw	s0,8(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:169
	}
}
8000036e:	40b2                	lw	ra,12(sp)
80000370:	0141                	addi	sp,sp,16
80000372:	8082                	ret

80000374 <PutChar>:
PutChar():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:41
 * @param  pStr	Storage string.
 * @param  c    Character to write.
 */
signed int PutChar(char *pStr, char c)
{
    *pStr = c;
80000374:	00b50023          	sb	a1,0(a0) # 2000 <system_k1921vg015.c.08e00f8f+0x3e2>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:43
    return 1;
}
80000378:	4505                	li	a0,1
8000037a:	8082                	ret

8000037c <PutString>:
PutString():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:54
 * @param  pStr     Storage string.
 * @param  pSource  Source string.
 * @return  The size of the written
 */
signed int PutString(char *pStr, const char *pSource)
{
8000037c:	87aa                	mv	a5,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:55
    signed int num = 0;
8000037e:	4501                	li	a0,0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:57

    while (*pSource != 0) {
80000380:	a031                	j	8000038c <PutString+0x10>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:59

        *pStr++ = *pSource++;
80000382:	0585                	addi	a1,a1,1
80000384:	00e78023          	sb	a4,0(a5) # c201000 <retarget.c.918a4a7b+0xc1f7d5f>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:60
        num++;
80000388:	0505                	addi	a0,a0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:59
        *pStr++ = *pSource++;
8000038a:	0785                	addi	a5,a5,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:57
    while (*pSource != 0) {
8000038c:	00058703          	lb	a4,0(a1)
80000390:	fb6d                	bnez	a4,80000382 <PutString+0x6>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:64
    }

    return num;
}
80000392:	8082                	ret

80000394 <PutUnsignedInt>:
PutUnsignedInt():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:81
signed int PutUnsignedInt(
    char *pStr,
    char fill,
    signed int width,
    unsigned int value)
{
80000394:	1101                	addi	sp,sp,-32
80000396:	ce06                	sw	ra,28(sp)
80000398:	cc22                	sw	s0,24(sp)
8000039a:	ca26                	sw	s1,20(sp)
8000039c:	c84a                	sw	s2,16(sp)
8000039e:	c64e                	sw	s3,12(sp)
800003a0:	c452                	sw	s4,8(sp)
800003a2:	842a                	mv	s0,a0
800003a4:	89ae                	mv	s3,a1
800003a6:	8a36                	mv	s4,a3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:85
    signed int num = 0;

    /* Take current digit into account when calculating width */
    width--;
800003a8:	fff60493          	addi	s1,a2,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:88

    /* Recursively write upper digits */
    if ((value / 10) > 0) {
800003ac:	47a5                	li	a5,9
800003ae:	00d7e463          	bltu	a5,a3,800003b6 <PutUnsignedInt+0x22>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:82
    signed int num = 0;
800003b2:	4901                	li	s2,0
800003b4:	a01d                	j	800003da <PutUnsignedInt+0x46>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:90

        num = PutUnsignedInt(pStr, fill, width, value / 10);
800003b6:	ccccd6b7          	lui	a3,0xccccd
800003ba:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaea5>
800003be:	02da36b3          	mulhu	a3,s4,a3
800003c2:	828d                	srli	a3,a3,0x3
800003c4:	8626                	mv	a2,s1
800003c6:	37f9                	jal	80000394 <PutUnsignedInt>
800003c8:	892a                	mv	s2,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:91
        pStr += num;
800003ca:	942a                	add	s0,s0,a0
800003cc:	a809                	j	800003de <PutUnsignedInt+0x4a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:99
    /* Write filler characters */
    else {

        while (width > 0) {

            PutChar(pStr, fill);
800003ce:	85ce                	mv	a1,s3
800003d0:	8522                	mv	a0,s0
800003d2:	374d                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:100
            pStr++;
800003d4:	0405                	addi	s0,s0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:101
            num++;
800003d6:	0905                	addi	s2,s2,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:102
            width--;
800003d8:	14fd                	addi	s1,s1,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:97
        while (width > 0) {
800003da:	fe904ae3          	bgtz	s1,800003ce <PutUnsignedInt+0x3a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:107
        }
    }

    /* Write lower digit */
    num += PutChar(pStr, (value % 10) + '0');
800003de:	ccccd5b7          	lui	a1,0xccccd
800003e2:	ccd58593          	addi	a1,a1,-819 # cccccccd <__data_source_start+0x4cccaea5>
800003e6:	02ba35b3          	mulhu	a1,s4,a1
800003ea:	818d                	srli	a1,a1,0x3
800003ec:	00259793          	slli	a5,a1,0x2
800003f0:	97ae                	add	a5,a5,a1
800003f2:	0786                	slli	a5,a5,0x1
800003f4:	40fa05b3          	sub	a1,s4,a5
800003f8:	03058593          	addi	a1,a1,48
800003fc:	05e2                	slli	a1,a1,0x18
800003fe:	85e1                	srai	a1,a1,0x18
80000400:	8522                	mv	a0,s0
80000402:	3f8d                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:110

    return num;
}
80000404:	954a                	add	a0,a0,s2
80000406:	40f2                	lw	ra,28(sp)
80000408:	4462                	lw	s0,24(sp)
8000040a:	44d2                	lw	s1,20(sp)
8000040c:	4942                	lw	s2,16(sp)
8000040e:	49b2                	lw	s3,12(sp)
80000410:	4a22                	lw	s4,8(sp)
80000412:	6105                	addi	sp,sp,32
80000414:	8082                	ret

80000416 <PutSignedInt>:
PutSignedInt():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:127
signed int PutSignedInt(
    char *pStr,
    char fill,
    signed int width,
    signed int value)
{
80000416:	1101                	addi	sp,sp,-32
80000418:	ce06                	sw	ra,28(sp)
8000041a:	cc22                	sw	s0,24(sp)
8000041c:	ca26                	sw	s1,20(sp)
8000041e:	c84a                	sw	s2,16(sp)
80000420:	c64e                	sw	s3,12(sp)
80000422:	c452                	sw	s4,8(sp)
80000424:	c256                	sw	s5,4(sp)
80000426:	842a                	mv	s0,a0
80000428:	89ae                	mv	s3,a1
8000042a:	8a36                	mv	s4,a3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:132
    signed int num = 0;
    unsigned int absolute;

    /* Compute absolute value */
    if (value < 0) {
8000042c:	0606c463          	bltz	a3,80000494 <PutSignedInt+0x7e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:138

        absolute = -value;
    }
    else {

        absolute = value;
80000430:	8ab6                	mv	s5,a3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:142
    }

    /* Take current digit into account when calculating width */
    width--;
80000432:	fff60493          	addi	s1,a2,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:145

    /* Recursively write upper digits */
    if ((absolute / 10) > 0) {
80000436:	47a5                	li	a5,9
80000438:	0957f063          	bgeu	a5,s5,800004b8 <PutSignedInt+0xa2>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:147

        if (value < 0) {
8000043c:	040a4f63          	bltz	s4,8000049a <PutSignedInt+0x84>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:153

            num = PutSignedInt(pStr, fill, width, -(absolute / 10));
        }
        else {

            num = PutSignedInt(pStr, fill, width, absolute / 10);
80000440:	ccccd6b7          	lui	a3,0xccccd
80000444:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaea5>
80000448:	02dab6b3          	mulhu	a3,s5,a3
8000044c:	828d                	srli	a3,a3,0x3
8000044e:	8626                	mv	a2,s1
80000450:	85ce                	mv	a1,s3
80000452:	8522                	mv	a0,s0
80000454:	37c9                	jal	80000416 <PutSignedInt>
80000456:	892a                	mv	s2,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:155
        }
        pStr += num;
80000458:	944a                	add	s0,s0,s2
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:183
            pStr++;
        }
    }

    /* Write lower digit */
    num += PutChar(pStr, (absolute % 10) + '0');
8000045a:	ccccd5b7          	lui	a1,0xccccd
8000045e:	ccd58593          	addi	a1,a1,-819 # cccccccd <__data_source_start+0x4cccaea5>
80000462:	02bab5b3          	mulhu	a1,s5,a1
80000466:	818d                	srli	a1,a1,0x3
80000468:	00259793          	slli	a5,a1,0x2
8000046c:	97ae                	add	a5,a5,a1
8000046e:	0786                	slli	a5,a5,0x1
80000470:	40fa85b3          	sub	a1,s5,a5
80000474:	03058593          	addi	a1,a1,48
80000478:	05e2                	slli	a1,a1,0x18
8000047a:	85e1                	srai	a1,a1,0x18
8000047c:	8522                	mv	a0,s0
8000047e:	3ddd                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:186

    return num;
}
80000480:	954a                	add	a0,a0,s2
80000482:	40f2                	lw	ra,28(sp)
80000484:	4462                	lw	s0,24(sp)
80000486:	44d2                	lw	s1,20(sp)
80000488:	4942                	lw	s2,16(sp)
8000048a:	49b2                	lw	s3,12(sp)
8000048c:	4a22                	lw	s4,8(sp)
8000048e:	4a92                	lw	s5,4(sp)
80000490:	6105                	addi	sp,sp,32
80000492:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:134
        absolute = -value;
80000494:	40d00ab3          	neg	s5,a3
80000498:	bf69                	j	80000432 <PutSignedInt+0x1c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:149
            num = PutSignedInt(pStr, fill, width, -(absolute / 10));
8000049a:	ccccd6b7          	lui	a3,0xccccd
8000049e:	ccd68693          	addi	a3,a3,-819 # cccccccd <__data_source_start+0x4cccaea5>
800004a2:	02dab6b3          	mulhu	a3,s5,a3
800004a6:	828d                	srli	a3,a3,0x3
800004a8:	40d006b3          	neg	a3,a3
800004ac:	8626                	mv	a2,s1
800004ae:	85ce                	mv	a1,s3
800004b0:	8522                	mv	a0,s0
800004b2:	3795                	jal	80000416 <PutSignedInt>
800004b4:	892a                	mv	s2,a0
800004b6:	b74d                	j	80000458 <PutSignedInt+0x42>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:160
        if (value < 0) {
800004b8:	000a4463          	bltz	s4,800004c0 <PutSignedInt+0xaa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:127
{
800004bc:	4901                	li	s2,0
800004be:	a811                	j	800004d2 <PutSignedInt+0xbc>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:162
            width--;
800004c0:	ffe60493          	addi	s1,a2,-2
800004c4:	bfe5                	j	800004bc <PutSignedInt+0xa6>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:168
            PutChar(pStr, fill);
800004c6:	85ce                	mv	a1,s3
800004c8:	8522                	mv	a0,s0
800004ca:	356d                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:169
            pStr++;
800004cc:	0405                	addi	s0,s0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:170
            num++;
800004ce:	0905                	addi	s2,s2,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:171
            width--;
800004d0:	14fd                	addi	s1,s1,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:166
        while (width > 0) {
800004d2:	fe904ae3          	bgtz	s1,800004c6 <PutSignedInt+0xb0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:175
        if (value < 0) {
800004d6:	f80a52e3          	bgez	s4,8000045a <PutSignedInt+0x44>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:177
            num += PutChar(pStr, '-');
800004da:	02d00593          	li	a1,45
800004de:	8522                	mv	a0,s0
800004e0:	3d51                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:177 (discriminator 1)
800004e2:	992a                	add	s2,s2,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:178
            pStr++;
800004e4:	0405                	addi	s0,s0,1
800004e6:	bf95                	j	8000045a <PutSignedInt+0x44>

800004e8 <PutHexa>:
PutHexa():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:207
    char *pStr,
    char fill,
    signed int width,
    unsigned char maj,
    unsigned int value)
{
800004e8:	1101                	addi	sp,sp,-32
800004ea:	ce06                	sw	ra,28(sp)
800004ec:	cc22                	sw	s0,24(sp)
800004ee:	ca26                	sw	s1,20(sp)
800004f0:	c84a                	sw	s2,16(sp)
800004f2:	c64e                	sw	s3,12(sp)
800004f4:	c452                	sw	s4,8(sp)
800004f6:	c256                	sw	s5,4(sp)
800004f8:	842a                	mv	s0,a0
800004fa:	89ae                	mv	s3,a1
800004fc:	8ab6                	mv	s5,a3
800004fe:	8a3a                	mv	s4,a4
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:211
    signed int num = 0;

    /* Decrement width */
    width--;
80000500:	fff60493          	addi	s1,a2,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:214

    /* Recursively output upper digits */
    if ((value >> 4) > 0) {
80000504:	8311                	srli	a4,a4,0x4
80000506:	e319                	bnez	a4,8000050c <PutHexa+0x24>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:208
    signed int num = 0;
80000508:	4901                	li	s2,0
8000050a:	a821                	j	80000522 <PutHexa+0x3a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:216

        num += PutHexa(pStr, fill, width, maj, value >> 4);
8000050c:	8626                	mv	a2,s1
8000050e:	3fe9                	jal	800004e8 <PutHexa>
80000510:	892a                	mv	s2,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:217
        pStr += num;
80000512:	942a                	add	s0,s0,a0
80000514:	a809                	j	80000526 <PutHexa+0x3e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:224
    /* Write filler chars */
    else {

        while (width > 0) {

            PutChar(pStr, fill);
80000516:	85ce                	mv	a1,s3
80000518:	8522                	mv	a0,s0
8000051a:	3da9                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:225
            pStr++;
8000051c:	0405                	addi	s0,s0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:226
            num++;
8000051e:	0905                	addi	s2,s2,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:227
            width--;
80000520:	14fd                	addi	s1,s1,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:222
        while (width > 0) {
80000522:	fe904ae3          	bgtz	s1,80000516 <PutHexa+0x2e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:232
        }
    }

    /* Write current digit */
    if ((value & 0xF) < 10) {
80000526:	00fa7793          	andi	a5,s4,15
8000052a:	4725                	li	a4,9
8000052c:	02f77563          	bgeu	a4,a5,80000556 <PutHexa+0x6e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:236

        PutChar(pStr, (value & 0xF) + '0');
    }
    else if (maj) {
80000530:	020a8863          	beqz	s5,80000560 <PutHexa+0x78>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:238

        PutChar(pStr, (value & 0xF) - 10 + 'A');
80000534:	00fa7593          	andi	a1,s4,15
80000538:	03758593          	addi	a1,a1,55
8000053c:	8522                	mv	a0,s0
8000053e:	3d1d                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:247
        PutChar(pStr, (value & 0xF) - 10 + 'a');
    }
    num++;

    return num;
}
80000540:	00190513          	addi	a0,s2,1
80000544:	40f2                	lw	ra,28(sp)
80000546:	4462                	lw	s0,24(sp)
80000548:	44d2                	lw	s1,20(sp)
8000054a:	4942                	lw	s2,16(sp)
8000054c:	49b2                	lw	s3,12(sp)
8000054e:	4a22                	lw	s4,8(sp)
80000550:	4a92                	lw	s5,4(sp)
80000552:	6105                	addi	sp,sp,32
80000554:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:234
        PutChar(pStr, (value & 0xF) + '0');
80000556:	03078593          	addi	a1,a5,48
8000055a:	8522                	mv	a0,s0
8000055c:	3d21                	jal	80000374 <PutChar>
8000055e:	b7cd                	j	80000540 <PutHexa+0x58>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:242
        PutChar(pStr, (value & 0xF) - 10 + 'a');
80000560:	00fa7593          	andi	a1,s4,15
80000564:	05758593          	addi	a1,a1,87
80000568:	05e2                	slli	a1,a1,0x18
8000056a:	85e1                	srai	a1,a1,0x18
8000056c:	8522                	mv	a0,s0
8000056e:	3519                	jal	80000374 <PutChar>
80000570:	bfc1                	j	80000540 <PutHexa+0x58>

80000572 <vsnprintf>:
vsnprintf():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:266
 * @param ap      Argument list.
 *
 * @return  The number of characters written.
 */
signed int vsnprintf(char *pStr, size_t length, const char *pFormat, va_list ap)
{
80000572:	7179                	addi	sp,sp,-48
80000574:	d606                	sw	ra,44(sp)
80000576:	d226                	sw	s1,36(sp)
80000578:	d04a                	sw	s2,32(sp)
8000057a:	ce4e                	sw	s3,28(sp)
8000057c:	892a                	mv	s2,a0
8000057e:	89ae                	mv	s3,a1
80000580:	c636                	sw	a3,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:273
    unsigned char width;
    signed int    num = 0;
    signed int    size = 0;

    /* Clear the string */
    if (pStr) {
80000582:	c119                	beqz	a0,80000588 <vsnprintf+0x16>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:275

        *pStr = 0;
80000584:	00050023          	sb	zero,0(a0)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:290
            size++;
        }
        /* Escaped '%' */
        else if (*(pFormat+1) == '%') {

            *pStr++ = '%';
80000588:	4481                	li	s1,0
8000058a:	a821                	j	800005a2 <vsnprintf+0x30>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:288
        else if (*(pFormat+1) == '%') {
8000058c:	00160583          	lb	a1,1(a2)
80000590:	02500793          	li	a5,37
80000594:	02f59763          	bne	a1,a5,800005c2 <vsnprintf+0x50>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:290
            *pStr++ = '%';
80000598:	00f90023          	sb	a5,0(s2)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:291
            pFormat += 2;
8000059c:	0609                	addi	a2,a2,2
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:292
            size++;
8000059e:	0485                	addi	s1,s1,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:290
            *pStr++ = '%';
800005a0:	0905                	addi	s2,s2,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:279
    while (*pFormat != 0 && size < length) {
800005a2:	00060783          	lb	a5,0(a2)
800005a6:	10078763          	beqz	a5,800006b4 <vsnprintf+0x142>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:279 (discriminator 1)
800005aa:	1134f563          	bgeu	s1,s3,800006b4 <vsnprintf+0x142>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:282
        if (*pFormat != '%') {
800005ae:	02500713          	li	a4,37
800005b2:	fce78de3          	beq	a5,a4,8000058c <vsnprintf+0x1a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:284
            *pStr++ = *pFormat++;
800005b6:	0605                	addi	a2,a2,1
800005b8:	00f90023          	sb	a5,0(s2)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:285
            size++;
800005bc:	0485                	addi	s1,s1,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:284
            *pStr++ = *pFormat++;
800005be:	0905                	addi	s2,s2,1
800005c0:	b7cd                	j	800005a2 <vsnprintf+0x30>
800005c2:	d422                	sw	s0,40(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:299
        /* Token delimiter */
        else {

            fill = ' ';
            width = 0;
            pFormat++;
800005c4:	00160413          	addi	s0,a2,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:302

            /* Parse filler */
            if (*pFormat == '0') {
800005c8:	03000793          	li	a5,48
800005cc:	00f58663          	beq	a1,a5,800005d8 <vsnprintf+0x66>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:297
            fill = ' ';
800005d0:	02000593          	li	a1,32
800005d4:	4601                	li	a2,0
800005d6:	a005                	j	800005f6 <vsnprintf+0x84>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:305

                fill = '0';
                pFormat++;
800005d8:	00260413          	addi	s0,a2,2
800005dc:	bfe5                	j	800005d4 <vsnprintf+0x62>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:311
            }

            /* Parse width */
            while ((*pFormat >= '0') && (*pFormat <= '9')) {

                width = (width*10) + *pFormat-'0';
800005de:	00261713          	slli	a4,a2,0x2
800005e2:	9732                	add	a4,a4,a2
800005e4:	0706                	slli	a4,a4,0x1
800005e6:	97ba                	add	a5,a5,a4
800005e8:	0ff7f793          	zext.b	a5,a5
800005ec:	fd078793          	addi	a5,a5,-48
800005f0:	0ff7f613          	zext.b	a2,a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:312
                pFormat++;
800005f4:	0405                	addi	s0,s0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:309
            while ((*pFormat >= '0') && (*pFormat <= '9')) {
800005f6:	00040683          	lb	a3,0(s0)
800005fa:	0ff6f793          	zext.b	a5,a3
800005fe:	fd078713          	addi	a4,a5,-48
80000602:	0ff77713          	zext.b	a4,a4
80000606:	4525                	li	a0,9
80000608:	fce57be3          	bgeu	a0,a4,800005de <vsnprintf+0x6c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:316
            }

            /* Check if there is enough space */
            if (size + width > length) {
8000060c:	009607b3          	add	a5,a2,s1
80000610:	00f9f963          	bgeu	s3,a5,80000622 <vsnprintf+0xb0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:318

                width = length - size;
80000614:	0ff9f613          	zext.b	a2,s3
80000618:	0ff4f793          	zext.b	a5,s1
8000061c:	8e1d                	sub	a2,a2,a5
8000061e:	0ff67613          	zext.b	a2,a2
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:322
            }

            /* Parse type */
            switch (*pFormat) {
80000622:	fa868693          	addi	a3,a3,-88
80000626:	0ff6f713          	zext.b	a4,a3
8000062a:	02000793          	li	a5,32
8000062e:	08e7ec63          	bltu	a5,a4,800006c6 <vsnprintf+0x154>
80000632:	00271693          	slli	a3,a4,0x2
80000636:	800027b7          	lui	a5,0x80002
8000063a:	d6878793          	addi	a5,a5,-664 # 80001d68 <__clz_tab+0x100>
8000063e:	96be                	add	a3,a3,a5
80000640:	429c                	lw	a5,0(a3)
80000642:	8782                	jr	a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:324
            case 'd':
            case 'i': num = PutSignedInt(pStr, fill, width, va_arg(ap, signed int)); break;
80000644:	47b2                	lw	a5,12(sp)
80000646:	00478713          	addi	a4,a5,4
8000064a:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:324 (discriminator 1)
8000064c:	4394                	lw	a3,0(a5)
8000064e:	854a                	mv	a0,s2
80000650:	33d9                	jal	80000416 <PutSignedInt>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:334
            case 'c': num = PutChar(pStr, va_arg(ap, unsigned int)); break;
            default:
                return EOF;
            }

            pFormat++;
80000652:	00140613          	addi	a2,s0,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:335
            pStr += num;
80000656:	992a                	add	s2,s2,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:336
            size += num;
80000658:	94aa                	add	s1,s1,a0
8000065a:	5422                	lw	s0,40(sp)
8000065c:	b799                	j	800005a2 <vsnprintf+0x30>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:325
            case 'u': num = PutUnsignedInt(pStr, fill, width, va_arg(ap, unsigned int)); break;
8000065e:	47b2                	lw	a5,12(sp)
80000660:	00478713          	addi	a4,a5,4
80000664:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:325 (discriminator 1)
80000666:	4394                	lw	a3,0(a5)
80000668:	854a                	mv	a0,s2
8000066a:	332d                	jal	80000394 <PutUnsignedInt>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:325
8000066c:	b7dd                	j	80000652 <vsnprintf+0xe0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:326
            case 'x': num = PutHexa(pStr, fill, width, 0, va_arg(ap, unsigned int)); break;
8000066e:	47b2                	lw	a5,12(sp)
80000670:	00478713          	addi	a4,a5,4
80000674:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:326 (discriminator 1)
80000676:	4398                	lw	a4,0(a5)
80000678:	4681                	li	a3,0
8000067a:	854a                	mv	a0,s2
8000067c:	35b5                	jal	800004e8 <PutHexa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:326
8000067e:	bfd1                	j	80000652 <vsnprintf+0xe0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:327
            case 'X': num = PutHexa(pStr, fill, width, 1, va_arg(ap, unsigned int)); break;
80000680:	47b2                	lw	a5,12(sp)
80000682:	00478713          	addi	a4,a5,4
80000686:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:327 (discriminator 1)
80000688:	4398                	lw	a4,0(a5)
8000068a:	4685                	li	a3,1
8000068c:	854a                	mv	a0,s2
8000068e:	3da9                	jal	800004e8 <PutHexa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:327
80000690:	b7c9                	j	80000652 <vsnprintf+0xe0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:328
            case 's': num = PutString(pStr, va_arg(ap, char *)); break;
80000692:	47b2                	lw	a5,12(sp)
80000694:	00478713          	addi	a4,a5,4
80000698:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:328 (discriminator 1)
8000069a:	438c                	lw	a1,0(a5)
8000069c:	854a                	mv	a0,s2
8000069e:	39f9                	jal	8000037c <PutString>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:328
800006a0:	bf4d                	j	80000652 <vsnprintf+0xe0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:329
            case 'c': num = PutChar(pStr, va_arg(ap, unsigned int)); break;
800006a2:	47b2                	lw	a5,12(sp)
800006a4:	00478713          	addi	a4,a5,4
800006a8:	c63a                	sw	a4,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:329 (discriminator 1)
800006aa:	00078583          	lb	a1,0(a5)
800006ae:	854a                	mv	a0,s2
800006b0:	31d1                	jal	80000374 <PutChar>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:329
800006b2:	b745                	j	80000652 <vsnprintf+0xe0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:341
        }
    }

    /* NULL-terminated (final \0 is not counted) */
    if (size < length) {
800006b4:	0134f563          	bgeu	s1,s3,800006be <vsnprintf+0x14c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:343

        *pStr = 0;
800006b8:	00090023          	sb	zero,0(s2)
800006bc:	a039                	j	800006ca <vsnprintf+0x158>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:347
    }
    else {

        *(--pStr) = 0;
800006be:	fe090fa3          	sb	zero,-1(s2)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:348
        size--;
800006c2:	14fd                	addi	s1,s1,-1
800006c4:	a019                	j	800006ca <vsnprintf+0x158>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:322
            switch (*pFormat) {
800006c6:	54fd                	li	s1,-1
800006c8:	5422                	lw	s0,40(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:352
    }

    return size;
}
800006ca:	8526                	mv	a0,s1
800006cc:	50b2                	lw	ra,44(sp)
800006ce:	5492                	lw	s1,36(sp)
800006d0:	5902                	lw	s2,32(sp)
800006d2:	49f2                	lw	s3,28(sp)
800006d4:	6145                	addi	sp,sp,48
800006d6:	8082                	ret

800006d8 <vsprintf>:
vsprintf():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:391
 * @param ap       Argument list.
 *
 * @return  The number of characters written.
 */
signed int vsprintf(char *pString, const char *pFormat, va_list ap)
{
800006d8:	1141                	addi	sp,sp,-16
800006da:	c606                	sw	ra,12(sp)
800006dc:	86b2                	mv	a3,a2
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:392
   return vsnprintf(pString, MAX_STRING_SIZE, pFormat, ap);
800006de:	862e                	mv	a2,a1
800006e0:	06400593          	li	a1,100
800006e4:	3579                	jal	80000572 <vsnprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:393
}
800006e6:	40b2                	lw	ra,12(sp)
800006e8:	0141                	addi	sp,sp,16
800006ea:	8082                	ret

800006ec <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:37
//-- Functions -----------------------------------------------------------------
void SystemCoreClockUpdate(void)
{
    uint32_t current_sysclk;
    uint32_t pll_refclk, pll_refdiv, pll_frac, pll_fbdiv, pll_pd0a, pll_pd0b, pll_pd1a, pll_pd1b = 1;
    current_sysclk = RCU->CLKSTAT_bit.SRC;
800006ec:	3000e737          	lui	a4,0x3000e
800006f0:	5f48                	lw	a0,60(a4)
800006f2:	890d                	andi	a0,a0,3
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:39
  	pll_refclk = HSECLK_VAL;
   	pll_fbdiv = RCU->PLLSYSCFG2_bit.FBDIV;
800006f4:	4f2c                	lw	a1,88(a4)
800006f6:	6785                	lui	a5,0x1
800006f8:	17fd                	addi	a5,a5,-1 # fff <printf.c.48218671+0xb5>
800006fa:	8dfd                	and	a1,a1,a5
800006fc:	05c2                	slli	a1,a1,0x10
800006fe:	81c1                	srli	a1,a1,0x10
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:40
   	pll_refdiv = RCU->PLLSYSCFG0_bit.REFDIV;
80000700:	05072883          	lw	a7,80(a4) # 3000e050 <retarget.c.918a4a7b+0x30004daf>
80000704:	0078d893          	srli	a7,a7,0x7
80000708:	03f8f893          	andi	a7,a7,63
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:41
   	pll_pd0a = RCU->PLLSYSCFG0_bit.PD0A;
8000070c:	4b3c                	lw	a5,80(a4)
8000070e:	83b5                	srli	a5,a5,0xd
80000710:	8b9d                	andi	a5,a5,7
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:42
   	pll_pd0b = RCU->PLLSYSCFG0_bit.PD0B;
80000712:	4b30                	lw	a2,80(a4)
80000714:	8241                	srli	a2,a2,0x10
80000716:	03f67613          	andi	a2,a2,63
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:43
   	pll_pd1a = RCU->PLLSYSCFG0_bit.PD1A;
8000071a:	4b34                	lw	a3,80(a4)
8000071c:	82d9                	srli	a3,a3,0x16
8000071e:	8a9d                	andi	a3,a3,7
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:44
   	pll_pd1b = RCU->PLLSYSCFG0_bit.PD1B;
80000720:	05072803          	lw	a6,80(a4)
80000724:	01985813          	srli	a6,a6,0x19
80000728:	03f87813          	andi	a6,a6,63
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:45
   	if (RCU->PLLSYSCFG0_bit.DSMEN) pll_frac = RCU->PLLSYSCFG1_bit.FRAC;
8000072c:	4b38                	lw	a4,80(a4)
8000072e:	8311                	srli	a4,a4,0x4
80000730:	8b05                	andi	a4,a4,1
80000732:	c735                	beqz	a4,8000079e <SystemCoreClockUpdate+0xb2>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:45 (discriminator 1)
80000734:	3000e737          	lui	a4,0x3000e
80000738:	4b78                	lw	a4,84(a4)
8000073a:	01000337          	lui	t1,0x1000
8000073e:	137d                	addi	t1,t1,-1 # ffffff <retarget.c.918a4a7b+0xff6d5e>
80000740:	00677733          	and	a4,a4,t1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:48
   	else pll_frac = 0;

   	SystemPll0Clock = (pll_refclk * (pll_fbdiv+pll_frac/(1 << 24))) / (pll_refdiv * (1+pll_pd0a) * (1+pll_pd0b));
80000744:	8361                	srli	a4,a4,0x18
80000746:	972e                	add	a4,a4,a1
80000748:	00f425b7          	lui	a1,0xf42
8000074c:	40058593          	addi	a1,a1,1024 # f42400 <retarget.c.918a4a7b+0xf3915f>
80000750:	02b70733          	mul	a4,a4,a1
80000754:	0785                	addi	a5,a5,1
80000756:	031787b3          	mul	a5,a5,a7
8000075a:	0605                	addi	a2,a2,1
8000075c:	02c787b3          	mul	a5,a5,a2
80000760:	02f757b3          	divu	a5,a4,a5
80000764:	9af1a423          	sw	a5,-1624(gp) # 40000128 <SystemPll0Clock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:49
   	SystemPll1Clock = (pll_refclk * (pll_fbdiv+pll_frac/(1 << 24))) / (pll_refdiv * (1+pll_pd1a) * (1+pll_pd1b));
80000768:	0685                	addi	a3,a3,1
8000076a:	031686b3          	mul	a3,a3,a7
8000076e:	00180613          	addi	a2,a6,1
80000772:	02c686b3          	mul	a3,a3,a2
80000776:	02d75733          	divu	a4,a4,a3
8000077a:	9ae1a223          	sw	a4,-1628(gp) # 40000124 <SystemPll1Clock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:50
    switch (current_sysclk) {
8000077e:	4709                	li	a4,2
80000780:	04e50163          	beq	a0,a4,800007c2 <SystemCoreClockUpdate+0xd6>
80000784:	02a76063          	bltu	a4,a0,800007a4 <SystemCoreClockUpdate+0xb8>
80000788:	c515                	beqz	a0,800007b4 <SystemCoreClockUpdate+0xc8>
8000078a:	4785                	li	a5,1
8000078c:	00f51b63          	bne	a0,a5,800007a2 <SystemCoreClockUpdate+0xb6>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:55
    case RCU_CLKSTAT_SRC_HSICLK:
        SystemCoreClock = HSICLK_VAL;
        break;
    case RCU_CLKSTAT_SRC_HSECLK:
        SystemCoreClock = HSECLK_VAL;
80000790:	00f427b7          	lui	a5,0xf42
80000794:	40078793          	addi	a5,a5,1024 # f42400 <retarget.c.918a4a7b+0xf3915f>
80000798:	9af1a023          	sw	a5,-1632(gp) # 40000120 <SystemCoreClock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:56
        break;
8000079c:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:46
   	else pll_frac = 0;
8000079e:	4701                	li	a4,0
800007a0:	b755                	j	80000744 <SystemCoreClockUpdate+0x58>
800007a2:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:50
    switch (current_sysclk) {
800007a4:	478d                	li	a5,3
800007a6:	00f51663          	bne	a0,a5,800007b2 <SystemCoreClockUpdate+0xc6>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:61
    case RCU_CLKSTAT_SRC_SYSPLL0CLK:
    	SystemCoreClock = SystemPll0Clock;
    	break;
    case RCU_CLKSTAT_SRC_LSICLK:
    	SystemCoreClock = LSICLK_VAL;
800007aa:	6721                	lui	a4,0x8
800007ac:	9ae1a023          	sw	a4,-1632(gp) # 40000120 <SystemCoreClock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:65
        break;
    }

}
800007b0:	8082                	ret
800007b2:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:52
        SystemCoreClock = HSICLK_VAL;
800007b4:	000f47b7          	lui	a5,0xf4
800007b8:	24078793          	addi	a5,a5,576 # f4240 <retarget.c.918a4a7b+0xeaf9f>
800007bc:	9af1a023          	sw	a5,-1632(gp) # 40000120 <SystemCoreClock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:53
        break;
800007c0:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:58
    	SystemCoreClock = SystemPll0Clock;
800007c2:	9af1a023          	sw	a5,-1632(gp) # 40000120 <SystemCoreClock>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:59
    	break;
800007c6:	8082                	ret

800007c8 <ClkInit>:
ClkInit():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:75
    uint32_t sysclk_source;

    //clockout control
    #ifndef CKO_NONE
        //C7 clockout
        RCU->CGCFGAHB_bit.GPIOCEN = 1;
800007c8:	3000e7b7          	lui	a5,0x3000e
800007cc:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.918a4a7b+0x30004d5f>
800007d0:	40076713          	ori	a4,a4,1024
800007d4:	00e79023          	sh	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:76
        RCU->RSTDISAHB_bit.GPIOCEN = 1;
800007d8:	0107d703          	lhu	a4,16(a5)
800007dc:	40076713          	ori	a4,a4,1024
800007e0:	00e79823          	sh	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:77
        GPIOC->ALTFUNCNUM_bit.PIN7 = 3;
800007e4:	28002737          	lui	a4,0x28002
800007e8:	5f54                	lw	a3,60(a4)
800007ea:	6631                	lui	a2,0xc
800007ec:	8ed1                	or	a3,a3,a2
800007ee:	df54                	sw	a3,60(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:78
        GPIOC->ALTFUNCSET_bit.PIN7 = 1;
800007f0:	03475683          	lhu	a3,52(a4) # 28002034 <retarget.c.918a4a7b+0x27ff8d93>
800007f4:	0806e693          	ori	a3,a3,128
800007f8:	02d71a23          	sh	a3,52(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:92
        RCU->CLKOUTCFG = (RCU_CLKOUTCFG_CLKSEL_HSE << RCU_CLKOUTCFG_CLKSEL_Pos) |
				  	  	  (1 << RCU_CLKOUTCFG_DIVN_Pos) |
						  (0 << RCU_CLKOUTCFG_DIVEN_Pos) |
						  RCU_CLKOUTCFG_RSTDIS_Msk | RCU_CLKOUTCFG_CLKEN_Msk; //CKO = HSECLK
    #elif defined CKO_PLL0
        RCU->CLKOUTCFG = (RCU_CLKOUTCFG_CLKSEL_PLL0 << RCU_CLKOUTCFG_CLKSEL_Pos) |
800007fc:	6745                	lui	a4,0x11
800007fe:	12170713          	addi	a4,a4,289 # 11121 <retarget.c.918a4a7b+0x7e80>
80000802:	0ae7ae23          	sw	a4,188(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:108
//select system clock
#ifdef SYSCLK_PLL
	//PLLCLK = REFCLK * (FBDIV+FRAC/2^24) / (REFDIV*(1+PD0A)*(1+PD0B))
	
	//select HSE as source system clock while config PLL
	RCU->SYSCLKCFG = (RCU_SYSCLKCFG_SRC_HSECLK << RCU_SYSCLKCFG_SRC_Pos);
80000806:	4705                	li	a4,1
80000808:	db98                	sw	a4,48(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:110
    // Wait switching done
    timeout_counter = 0;
8000080a:	4681                	li	a3,0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:111
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)){ //SYSCLK_SWITCH_TIMEOUT))
8000080c:	a011                	j	80000810 <ClkInit+0x48>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:112
        timeout_counter++;
8000080e:	0685                	addi	a3,a3,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:111
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)){ //SYSCLK_SWITCH_TIMEOUT))
80000810:	3000e7b7          	lui	a5,0x3000e
80000814:	5fd8                	lw	a4,60(a5)
80000816:	8b0d                	andi	a4,a4,3
80000818:	5b9c                	lw	a5,48(a5)
8000081a:	8b8d                	andi	a5,a5,3
8000081c:	00f70663          	beq	a4,a5,80000828 <ClkInit+0x60>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:111 (discriminator 1)
80000820:	06300793          	li	a5,99
80000824:	fed7f5e3          	bgeu	a5,a3,8000080e <ClkInit+0x46>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:147
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
	RCU->PLLSYSCFG2 = 100;         //FBDIV
#elif (HSECLK_VAL == 16000000)
// Fout0 = 50 000 000 Hz
// Fout1 = 12 500 000 Hz
	RCU->PLLSYSCFG0 =( 7 << RCU_PLLSYSCFG0_PD1B_Pos) |  //PD1B
80000828:	3000e7b7          	lui	a5,0x3000e
8000082c:	0fc16737          	lui	a4,0xfc16
80000830:	10770713          	addi	a4,a4,263 # fc16107 <retarget.c.918a4a7b+0xfc0ce66>
80000834:	cbb8                	sw	a4,80(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:157
					 ( 0 << RCU_PLLSYSCFG0_FOUTEN_Pos)    |  //fouten
					 ( 0 << RCU_PLLSYSCFG0_DSMEN_Pos)     |  //dsmen
					 ( 0 << RCU_PLLSYSCFG0_DACEN_Pos)     |  //dacen
					 ( 3 << RCU_PLLSYSCFG0_BYP_Pos)       |  //bypass
					 ( 1 << RCU_PLLSYSCFG0_PLLEN_Pos);       //en
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
80000836:	0407aa23          	sw	zero,84(a5) # 3000e054 <retarget.c.918a4a7b+0x30004db3>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:158
	RCU->PLLSYSCFG2 = 50;         //FBDIV
8000083a:	03200713          	li	a4,50
8000083e:	cfb8                	sw	a4,88(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:192
	RCU->PLLSYSCFG1 = 0;          //FRAC = 0					 
	RCU->PLLSYSCFG2 = 65;         //FBDIV
#else
#error "Please define HSECLK_VAL with correct values!"
#endif
	RCU->PLLSYSCFG0_bit.FOUTEN = 1; 	// Fout0 Enable
80000840:	4bb8                	lw	a4,80(a5)
80000842:	f9f77713          	andi	a4,a4,-97
80000846:	02076713          	ori	a4,a4,32
8000084a:	cbb8                	sw	a4,80(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:193
	timeout_counter = 1000;
8000084c:	3e800793          	li	a5,1000
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:194
	while(timeout_counter) timeout_counter--;
80000850:	a011                	j	80000854 <ClkInit+0x8c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:194 (discriminator 2)
80000852:	17fd                	addi	a5,a5,-1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:194 (discriminator 1)
80000854:	fffd                	bnez	a5,80000852 <ClkInit+0x8a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:195 (discriminator 1)
	while((RCU->PLLSYSSTAT_bit.LOCK) != 1)
80000856:	3000e737          	lui	a4,0x3000e
8000085a:	5338                	lw	a4,96(a4)
8000085c:	8b05                	andi	a4,a4,1
8000085e:	df65                	beqz	a4,80000856 <ClkInit+0x8e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:197
	{}; 								// wait lock signal
	RCU->PLLSYSCFG0_bit.BYP = 2; 		// Bypass for Fout1
80000860:	3000e637          	lui	a2,0x3000e
80000864:	4a38                	lw	a4,80(a2)
80000866:	9b65                	andi	a4,a4,-7
80000868:	00476713          	ori	a4,a4,4
8000086c:	ca38                	sw	a4,80(a2)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:201
	//select PLL as source system clock
	sysclk_source = RCU_SYSCLKCFG_SRC_SYSPLL0CLK;
    // FLASH control settings
    FLASH->CTRL_bit.LAT = 3;
8000086e:	3000d6b7          	lui	a3,0x3000d
80000872:	46f8                	lw	a4,76(a3)
80000874:	fff105b7          	lui	a1,0xfff10
80000878:	15fd                	addi	a1,a1,-1 # fff0ffff <__data_source_start+0x7ff0e1d7>
8000087a:	8f6d                	and	a4,a4,a1
8000087c:	000305b7          	lui	a1,0x30
80000880:	8f4d                	or	a4,a4,a1
80000882:	c6f8                	sw	a4,76(a3)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:202
    FLASH->CTRL_bit.CEN = 1;
80000884:	46f8                	lw	a4,76(a3)
80000886:	00276713          	ori	a4,a4,2
8000088a:	c6f8                	sw	a4,76(a3)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:214
#else
#error "Please define SYSCLK source (SYSCLK_PLL | SYSCLK_HSE | SYSCLK_HSI | SYSCLK_LSI)!"
#endif

    //switch sysclk
    RCU->SYSCLKCFG = (sysclk_source << RCU_SYSCLKCFG_SRC_Pos);
8000088c:	4709                	li	a4,2
8000088e:	da18                	sw	a4,48(a2)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:217
    // Wait switching done
    timeout_counter = 0;
    while ((RCU->CLKSTAT_bit.SRC != RCU->SYSCLKCFG_bit.SRC) && (timeout_counter < 100)) //SYSCLK_SWITCH_TIMEOUT))
80000890:	3000e737          	lui	a4,0x3000e
80000894:	5f54                	lw	a3,60(a4)
80000896:	8a8d                	andi	a3,a3,3
80000898:	5b18                	lw	a4,48(a4)
8000089a:	8b0d                	andi	a4,a4,3
8000089c:	00e68863          	beq	a3,a4,800008ac <ClkInit+0xe4>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:217 (discriminator 1)
800008a0:	06300713          	li	a4,99
800008a4:	00f76463          	bltu	a4,a5,800008ac <ClkInit+0xe4>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:218
        timeout_counter++;
800008a8:	0785                	addi	a5,a5,1
800008aa:	b7dd                	j	80000890 <ClkInit+0xc8>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:223
/*    if (timeout_counter == SYSCLK_SWITCH_TIMEOUT) //SYSCLK failed to switch
        while (1) {
        };*/

}
800008ac:	8082                	ret

800008ae <InterruptEnable>:
InterruptEnable():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:226

void InterruptEnable()
{
800008ae:	1141                	addi	sp,sp,-16
800008b0:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:228
	//allow all interrupts in machine mode
	PLIC_SetThreshold (Plic_Mach_Target, 0); //allow all interrupts in machine mode
800008b2:	4581                	li	a1,0
800008b4:	4501                	li	a0,0
800008b6:	3449                	jal	80000338 <PLIC_SetThreshold>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:230
    // disable timer interrupt
    clear_csr(mie, MIE_MTIMER);
800008b8:	08000793          	li	a5,128
800008bc:	3047b7f3          	csrrc	a5,mie,a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:232
    // enable machine external interrupt
    set_csr(mie, MIE_MEXTERNAL);
800008c0:	6785                	lui	a5,0x1
800008c2:	80078793          	addi	a5,a5,-2048 # 800 <STACK_SIZE>
800008c6:	3047a7f3          	csrrs	a5,mie,a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:234
    // enable global interrupts
    set_csr(mstatus, MSTATUS_MIE);
800008ca:	300467f3          	csrrsi	a5,mstatus,8
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:235
}
800008ce:	40b2                	lw	ra,12(sp)
800008d0:	0141                	addi	sp,sp,16
800008d2:	8082                	ret

800008d4 <SystemInit>:
SystemInit():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:248
    // disable global interrupts
    clear_csr(mstatus, MSTATUS_MIE);
}

void SystemInit(void)
{
800008d4:	1141                	addi	sp,sp,-16
800008d6:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:256
//	clear_csr(mie, MIE_MTIMER);
	// enable machine external interrupt
//	set_csr(mie, MIE_MEXTERNAL);
	// enable global interrupts
//	set_csr(mstatus, MSTATUS_MIE);
	ClkInit();
800008d8:	3dc5                	jal	800007c8 <ClkInit>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/system_k1921vg015.c:257
}
800008da:	40b2                	lw	ra,12(sp)
800008dc:	0141                	addi	sp,sp,16
800008de:	8082                	ret

800008e0 <BSP_led_init>:
BSP_led_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:59
}

void BSP_led_init()
{
	// CGCFGAHB регистр конфигурации тактирования для шины AHB
	RCU->CGCFGAHB_bit.GPIOAEN = 1; //  Разрешаем тактирование GPIOA
800008e0:	3000e7b7          	lui	a5,0x3000e
800008e4:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.918a4a7b+0x30004d5f>
800008e8:	10076713          	ori	a4,a4,256
800008ec:	00e79023          	sh	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:62

	// RSTDISAHB - регистр снятия сброса для шины AHB
	RCU->RSTDISAHB_bit.GPIOAEN = 1; //Включаем  GPIOA
800008f0:	0107d703          	lhu	a4,16(a5)
800008f4:	10076713          	ori	a4,a4,256
800008f8:	00e79823          	sh	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:65

	// для PB
	RCU->CGCFGAHB_bit.GPIOBEN = 1;
800008fc:	0007d703          	lhu	a4,0(a5)
80000900:	20076713          	ori	a4,a4,512
80000904:	00e79023          	sh	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:66
	RCU->RSTDISAHB_bit.GPIOBEN = 1;
80000908:	0107d703          	lhu	a4,16(a5)
8000090c:	20076713          	ori	a4,a4,512
80000910:	00e79823          	sh	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:67
	GPIOB->OUTENSET = PB0_MSK;
80000914:	280017b7          	lui	a5,0x28001
80000918:	4705                	li	a4,1
8000091a:	d7d8                	sw	a4,44(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:68
	GPIOB->DATAOUTCLR = PB0_MSK;
8000091c:	c7d8                	sw	a4,12(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:70

	GPIOA->OUTENSET = LEDS_MSK; // OUTENSET - регистр, который настраивает выводы как выходы
8000091e:	280007b7          	lui	a5,0x28000
80000922:	6741                	lui	a4,0x10
80000924:	f0070713          	addi	a4,a4,-256 # ff00 <retarget.c.918a4a7b+0x6c5f>
80000928:	d7d8                	sw	a4,44(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:72
	// GPIOA->DATAOUTSET = LEDS_MSK;
	GPIOA->DATAOUTCLR = LEDS_MSK;   // гасит диоды
8000092a:	c7d8                	sw	a4,12(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:74

	GPIOA->OUTENCLR = PA7_MSK;    // Кнопка как вход
8000092c:	08000713          	li	a4,128
80000930:	db98                	sw	a4,48(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:78

	// PULLMODE – регистр выбора режима подтяжки порта
	// 0b00111..11 -> 14 и 15 зануляюся
	GPIOA->PULLMODE &= ~(0b11 << (7 * 2));  // стр 367
80000932:	5398                	lw	a4,32(a5)
80000934:	76d1                	lui	a3,0xffff4
80000936:	16fd                	addi	a3,a3,-1 # ffff3fff <__data_source_start+0x7fff21d7>
80000938:	8f75                	and	a4,a4,a3
8000093a:	d398                	sw	a4,32(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:79
	GPIOA->PULLMODE |= (0b01 << (7 * 2));  // Подтяжка к уровню логической единицы
8000093c:	5398                	lw	a4,32(a5)
8000093e:	6691                	lui	a3,0x4
80000940:	8f55                	or	a4,a4,a3
80000942:	d398                	sw	a4,32(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:81

	GPIOA->OUTENSET = PA5_MSK;  // включение вывода, теперь как выход
80000944:	02000713          	li	a4,32
80000948:	d7d8                	sw	a4,44(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:82
}
8000094a:	8082                	ret

8000094c <TMR32_init>:
TMR32_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:121
  PMURTC->RTC_WAKECFG_bit.WAKEEN = 0x1;  // Разрешаем событие WAKEUP0
  PMURTC->RTC_HISTORY = 0x0;	// СБрасываем регистр событий
}

void TMR32_init(uint32_t period)
{
8000094c:	1141                	addi	sp,sp,-16
8000094e:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:122
	RCU->CGCFGAPB_bit.TMR32EN = 1;
80000950:	3000e7b7          	lui	a5,0x3000e
80000954:	4798                	lw	a4,8(a5)
80000956:	00176713          	ori	a4,a4,1
8000095a:	c798                	sw	a4,8(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:123
	RCU->RSTDISAPB_bit.TMR32EN = 1;
8000095c:	4f98                	lw	a4,24(a5)
8000095e:	00176713          	ori	a4,a4,1
80000962:	cf98                	sw	a4,24(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:126

	//Записываем значение периода в CAPCOM[0]
	TMR32->CAPCOM[0].VAL = period - 1;
80000964:	157d                	addi	a0,a0,-1
80000966:	30000737          	lui	a4,0x30000
8000096a:	cf48                	sw	a0,28(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:128
	//Выбираем режим счета от 0 до значения CAPCOM[0]
	TMR32->CTRL_bit.MODE = 1;
8000096c:	00075783          	lhu	a5,0(a4) # 30000000 <retarget.c.918a4a7b+0x2fff6d5f>
80000970:	fcf7f793          	andi	a5,a5,-49
80000974:	0107e793          	ori	a5,a5,16
80000978:	00f71023          	sh	a5,0(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:131

	//Разрешаем прерывание по совпадению значения счетчика и CAPCOM[0]
	TMR32->IM = 2;
8000097c:	4789                	li	a5,2
8000097e:	c71c                	sw	a5,8(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:134

	// Настраиваем обработчик прерывания для TMR32
	PLIC_SetIrqHandler(Plic_Mach_Target, IsrVect_IRQ_TMR32, TMR32_IRQHandler);
80000980:	80001637          	lui	a2,0x80001
80000984:	c1e60613          	addi	a2,a2,-994 # 80000c1e <TMR32_IRQHandler>
80000988:	4599                	li	a1,6
8000098a:	4501                	li	a0,0
8000098c:	3a25                	jal	800002c4 <PLIC_SetIrqHandler>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:135
	PLIC_SetPriority(IsrVect_IRQ_TMR32, 0x1);
8000098e:	4585                	li	a1,1
80000990:	4519                	li	a0,6
80000992:	32b1                	jal	800002de <PLIC_SetPriority>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:136
	PLIC_IntEnable(Plic_Mach_Target, IsrVect_IRQ_TMR32);
80000994:	4599                	li	a1,6
80000996:	4501                	li	a0,0
80000998:	3a89                	jal	800002ea <PLIC_IntEnable>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:137
}
8000099a:	40b2                	lw	ra,12(sp)
8000099c:	0141                	addi	sp,sp,16
8000099e:	8082                	ret

800009a0 <UART1_init>:
UART1_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:149
	// стр 188
    uint32_t baud_icoef = HSECLK_VAL / (16 * UART1_BAUD);
    uint32_t baud_fcoef = ((HSECLK_VAL / (16.0f * RETARGET_UART_BAUD) - baud_icoef) * 64 + 0.5f);

    // Настраиваем GPIO
    RCU->CGCFGAHB_bit.GPIOAEN = 1;  // включает такирование AHB
800009a0:	3000e7b7          	lui	a5,0x3000e
800009a4:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.918a4a7b+0x30004d5f>
800009a8:	10076713          	ori	a4,a4,256
800009ac:	00e79023          	sh	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:150
    RCU->RSTDISAHB_bit.GPIOAEN = 1; // снимает сброс
800009b0:	0107d703          	lhu	a4,16(a5)
800009b4:	10076713          	ori	a4,a4,256
800009b8:	00e79823          	sh	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:151
    RCU->CGCFGAPB_bit.UART1EN = 1;  // тактирование uart1
800009bc:	4798                	lw	a4,8(a5)
800009be:	08076713          	ori	a4,a4,128
800009c2:	c798                	sw	a4,8(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:152
    RCU->RSTDISAPB_bit.UART1EN = 1; // снимает сброс с uart1
800009c4:	4f98                	lw	a4,24(a5)
800009c6:	08076713          	ori	a4,a4,128
800009ca:	cf98                	sw	a4,24(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:154

    GPIOA->ALTFUNCNUM_bit.PIN2 = 1;
800009cc:	28000737          	lui	a4,0x28000
800009d0:	5f54                	lw	a3,60(a4)
800009d2:	fcf6f693          	andi	a3,a3,-49
800009d6:	0106e693          	ori	a3,a3,16
800009da:	df54                	sw	a3,60(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:155
    GPIOA->ALTFUNCNUM_bit.PIN3 = 1;
800009dc:	5f54                	lw	a3,60(a4)
800009de:	f3f6f693          	andi	a3,a3,-193
800009e2:	0406e693          	ori	a3,a3,64
800009e6:	df54                	sw	a3,60(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:158

    // ALTFUNCSET – активирует альтернативные функции для PA2 и PA3
    GPIOA->ALTFUNCSET = GPIO_ALTFUNCSET_PIN2_Msk | GPIO_ALTFUNCSET_PIN3_Msk;
800009e8:	46b1                	li	a3,12
800009ea:	db54                	sw	a3,52(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:164

    // Настраиваем UART1
    // UARTCLKCFG - Регистры настройки тактирования UART
    // CLKSEL - выбирает источник тактирования UART1
    // HSE внешний генератор
    RCU->UARTCLKCFG[1].UARTCLKCFG_bit.CLKSEL = RCU_UARTCLKCFG_CLKSEL_HSE;
800009ec:	5bf8                	lw	a4,116(a5)
800009ee:	fffd06b7          	lui	a3,0xfffd0
800009f2:	16fd                	addi	a3,a3,-1 # fffcffff <__data_source_start+0x7ffce1d7>
800009f4:	8f75                	and	a4,a4,a3
800009f6:	66c1                	lui	a3,0x10
800009f8:	8f55                	or	a4,a4,a3
800009fa:	dbf8                	sw	a4,116(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:167

    // DIVEN - отключает дополнительный делитель частоты
    RCU->UARTCLKCFG[1].UARTCLKCFG_bit.DIVEN = 0;
800009fc:	5bf8                	lw	a4,116(a5)
800009fe:	fff006b7          	lui	a3,0xfff00
80000a02:	16fd                	addi	a3,a3,-1 # ffefffff <__data_source_start+0x7fefe1d7>
80000a04:	8f75                	and	a4,a4,a3
80000a06:	dbf8                	sw	a4,116(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:169
    // RSTDIS - снимает сброс
    RCU->UARTCLKCFG[1].UARTCLKCFG_bit.RSTDIS = 1;
80000a08:	5bf8                	lw	a4,116(a5)
80000a0a:	10076713          	ori	a4,a4,256
80000a0e:	dbf8                	sw	a4,116(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:171
    // включает тактирование
    RCU->UARTCLKCFG[1].UARTCLKCFG_bit.CLKEN = 1;
80000a10:	5bf8                	lw	a4,116(a5)
80000a12:	00176713          	ori	a4,a4,1
80000a16:	dbf8                	sw	a4,116(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:173

    UART1->IBRD = baud_icoef; // записывасет дробную часть
80000a18:	300077b7          	lui	a5,0x30007
80000a1c:	4721                	li	a4,8
80000a1e:	d3d8                	sw	a4,36(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:176

    // Fractional Baud Rate Divisor
    UART1->FBRD = baud_fcoef;
80000a20:	02c00713          	li	a4,44
80000a24:	d798                	sw	a4,40(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:181

    // Line Control Register High
    // UART_LCRH_FEN_Msk включает FIFO (буфер для данных)
    // 3 << UART_LCRH_WLEN_Pos – устанавливает 8 бит данных
    UART1->LCRH = UART_LCRH_FEN_Msk | (3 << UART_LCRH_WLEN_Pos);
80000a26:	07000713          	li	a4,112
80000a2a:	d7d8                	sw	a4,44(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:184

    //Interrupt FIFO Level Select
    UART1->IFLS = 0;
80000a2c:	0207aa23          	sw	zero,52(a5) # 30007034 <retarget.c.918a4a7b+0x2fffdd93>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:192
     Control Register
     UART_CR_TXE_Msk разрешает передачу (TX)
     UART_CR_RXE_Msk разрешает приём (RX)
     UART_CR_UARTEN_Msk включает UART
     */
    UART1->CR = UART_CR_TXE_Msk | UART_CR_RXE_Msk | UART_CR_UARTEN_Msk;
80000a30:	30100713          	li	a4,769
80000a34:	db98                	sw	a4,48(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:193
}
80000a36:	8082                	ret

80000a38 <update_leds>:
update_leds():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:250
}


void update_leds()
{
	switch(button_click_counter)
80000a38:	88c1a783          	lw	a5,-1908(gp) # 4000000c <button_click_counter>
80000a3c:	470d                	li	a4,3
80000a3e:	06e78163          	beq	a5,a4,80000aa0 <update_leds+0x68>
80000a42:	02f76063          	bltu	a4,a5,80000a62 <update_leds+0x2a>
80000a46:	4705                	li	a4,1
80000a48:	02e78863          	beq	a5,a4,80000a78 <update_leds+0x40>
80000a4c:	4709                	li	a4,2
80000a4e:	00e79963          	bne	a5,a4,80000a60 <update_leds+0x28>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:259
		led_shift = led_shift << 1;
		if(led_shift > LED7_MSK) led_shift = LED0_MSK;
		break;

	case MODE_BLINKING:
		GPIOA->DATAOUTTGL = LEDS_MSK;
80000a52:	28000737          	lui	a4,0x28000
80000a56:	67c1                	lui	a5,0x10
80000a58:	f0078793          	addi	a5,a5,-256 # ff00 <retarget.c.918a4a7b+0x6c5f>
80000a5c:	cb1c                	sw	a5,16(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:260
		break;
80000a5e:	8082                	ret
80000a60:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:250
	switch(button_click_counter)
80000a62:	4711                	li	a4,4
80000a64:	00e79963          	bne	a5,a4,80000a76 <update_leds+0x3e>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:267
	case MODE_ALL_ON:
		GPIOA->DATAOUTSET = LEDS_MSK;
		break;

	case MODE_ALL_OFF:
		GPIOA->DATAOUTCLR = LEDS_MSK;
80000a68:	28000737          	lui	a4,0x28000
80000a6c:	67c1                	lui	a5,0x10
80000a6e:	f0078793          	addi	a5,a5,-256 # ff00 <retarget.c.918a4a7b+0x6c5f>
80000a72:	c75c                	sw	a5,12(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:273
		break;

	default:
		break;
	}
}
80000a74:	8082                	ret
80000a76:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:253
		GPIOA->DATAOUTTGL = led_shift;
80000a78:	99c1a683          	lw	a3,-1636(gp) # 4000011c <led_shift>
80000a7c:	28000737          	lui	a4,0x28000
80000a80:	cb14                	sw	a3,16(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:254
		led_shift = led_shift << 1;
80000a82:	99c1a703          	lw	a4,-1636(gp) # 4000011c <led_shift>
80000a86:	0706                	slli	a4,a4,0x1
80000a88:	98e1ae23          	sw	a4,-1636(gp) # 4000011c <led_shift>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:255
		if(led_shift > LED7_MSK) led_shift = LED0_MSK;
80000a8c:	99c1a703          	lw	a4,-1636(gp) # 4000011c <led_shift>
80000a90:	67a1                	lui	a5,0x8
80000a92:	fee7f1e3          	bgeu	a5,a4,80000a74 <update_leds+0x3c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:255 (discriminator 1)
80000a96:	10000713          	li	a4,256
80000a9a:	98e1ae23          	sw	a4,-1636(gp) # 4000011c <led_shift>
80000a9e:	8082                	ret
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:263
		GPIOA->DATAOUTSET = LEDS_MSK;
80000aa0:	28000737          	lui	a4,0x28000
80000aa4:	67c1                	lui	a5,0x10
80000aa6:	f0078793          	addi	a5,a5,-256 # ff00 <retarget.c.918a4a7b+0x6c5f>
80000aaa:	c71c                	sw	a5,8(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:264
		break;
80000aac:	8082                	ret

80000aae <retarget_init>:
retarget_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:40
    uint32_t baud_icoef = SystemCoreClock_uart / (16 * RETARGET_UART_BAUD);
    uint32_t baud_fcoef = ((SystemCoreClock_uart / (16.0f * RETARGET_UART_BAUD) - baud_icoef) * 64 + 0.5f);
    uint32_t uartclk_ref = 1;//RCU_UARTCFG_UARTCFG_CLKSEL_OSICLK;

    // Включаем тактирование
    RCU->CGCFGAHB_bit.GPIOAEN = 1;   // разрешает порт A
80000aae:	3000e7b7          	lui	a5,0x3000e
80000ab2:	0007d703          	lhu	a4,0(a5) # 3000e000 <retarget.c.918a4a7b+0x30004d5f>
80000ab6:	10076713          	ori	a4,a4,256
80000aba:	00e79023          	sh	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:41
    RCU->RSTDISAHB_bit.GPIOAEN = 1;
80000abe:	0107d703          	lhu	a4,16(a5)
80000ac2:	10076713          	ori	a4,a4,256
80000ac6:	00e79823          	sh	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:44

    // UART0
    RCU->CGCFGAPB_bit.UART0EN = 1;
80000aca:	4798                	lw	a4,8(a5)
80000acc:	04076713          	ori	a4,a4,64
80000ad0:	c798                	sw	a4,8(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:45
    RCU->RSTDISAPB_bit.UART0EN = 1;
80000ad2:	4f98                	lw	a4,24(a5)
80000ad4:	04076713          	ori	a4,a4,64
80000ad8:	cf98                	sw	a4,24(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:48

    //
    RETARGET_UART_PORT->ALTFUNCNUM_bit.PIN0 = 1;  // PA0
80000ada:	28000737          	lui	a4,0x28000
80000ade:	5f54                	lw	a3,60(a4)
80000ae0:	9af1                	andi	a3,a3,-4
80000ae2:	0016e693          	ori	a3,a3,1
80000ae6:	df54                	sw	a3,60(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:49
    RETARGET_UART_PORT->ALTFUNCNUM_bit.PIN1 = 1;  // PA1
80000ae8:	5f54                	lw	a3,60(a4)
80000aea:	9acd                	andi	a3,a3,-13
80000aec:	0046e693          	ori	a3,a3,4
80000af0:	df54                	sw	a3,60(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:51

    RETARGET_UART_PORT->ALTFUNCSET = (1 << RETARGET_UART_PIN_TX_POS) | (1 << RETARGET_UART_PIN_RX_POS);
80000af2:	468d                	li	a3,3
80000af4:	db54                	sw	a3,52(a4)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:52
    RCU->UARTCLKCFG[RETARGET_UART_NUM].UARTCLKCFG = (uartclk_ref << RCU_UARTCLKCFG_CLKSEL_Pos) |
80000af6:	6741                	lui	a4,0x10
80000af8:	10170713          	addi	a4,a4,257 # 10101 <retarget.c.918a4a7b+0x6e60>
80000afc:	dbb8                	sw	a4,112(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:55
                                              	  	  RCU_UARTCLKCFG_CLKEN_Msk |
													  RCU_UARTCLKCFG_RSTDIS_Msk;
    RETARGET_UART->IBRD = baud_icoef;
80000afe:	300067b7          	lui	a5,0x30006
80000b02:	4721                	li	a4,8
80000b04:	d3d8                	sw	a4,36(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:56
    RETARGET_UART->FBRD = baud_fcoef;
80000b06:	02c00713          	li	a4,44
80000b0a:	d798                	sw	a4,40(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:57
    RETARGET_UART->LCRH = UART_LCRH_FEN_Msk | (3 << UART_LCRH_WLEN_Pos);
80000b0c:	07000713          	li	a4,112
80000b10:	d7d8                	sw	a4,44(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:58
    RETARGET_UART->CR = UART_CR_TXE_Msk | UART_CR_RXE_Msk | UART_CR_UARTEN_Msk;
80000b12:	30100713          	li	a4,769
80000b16:	db98                	sw	a4,48(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:60
#endif //RETARGET
}
80000b18:	8082                	ret

80000b1a <retarget_put_char>:
retarget_put_char():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:82 (discriminator 1)
// отправка символа
int retarget_put_char(int ch)
{
#if defined RETARGET
	// ожидание пока uart освободится
    while (RETARGET_UART->FR_bit.BUSY) {
80000b1a:	300067b7          	lui	a5,0x30006
80000b1e:	4f9c                	lw	a5,24(a5)
80000b20:	838d                	srli	a5,a5,0x3
80000b22:	8b85                	andi	a5,a5,1
80000b24:	fbfd                	bnez	a5,80000b1a <retarget_put_char>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:85
    };
    // отправка байта, DR - data register
    RETARGET_UART->DR = ch;
80000b26:	300067b7          	lui	a5,0x30006
80000b2a:	c388                	sw	a0,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../retarget.c:88
#endif //RETARGET
    return 0;
}
80000b2c:	4501                	li	a0,0
80000b2e:	8082                	ret

80000b30 <Send_buff>:
Send_buff():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:47
{
80000b30:	1141                	addi	sp,sp,-16
80000b32:	c606                	sw	ra,12(sp)
80000b34:	c422                	sw	s0,8(sp)
80000b36:	c226                	sw	s1,4(sp)
80000b38:	84aa                	mv	s1,a0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:48
	uint8_t i = 0;
80000b3a:	4401                	li	s0,0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:49
	while ((i < 120) && (a[i] != '\0'))
80000b3c:	a029                	j	80000b46 <Send_buff+0x16>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:51
		retarget_put_char(a[i]);
80000b3e:	3ff1                	jal	80000b1a <retarget_put_char>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:52
		i++;
80000b40:	0405                	addi	s0,s0,1
80000b42:	0ff47413          	zext.b	s0,s0
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:49
	while ((i < 120) && (a[i] != '\0'))
80000b46:	07700793          	li	a5,119
80000b4a:	0087e763          	bltu	a5,s0,80000b58 <Send_buff+0x28>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:49 (discriminator 1)
80000b4e:	008487b3          	add	a5,s1,s0
80000b52:	00078503          	lb	a0,0(a5) # 30006000 <retarget.c.918a4a7b+0x2fffcd5f>
80000b56:	f565                	bnez	a0,80000b3e <Send_buff+0xe>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:54
}
80000b58:	40b2                	lw	ra,12(sp)
80000b5a:	4422                	lw	s0,8(sp)
80000b5c:	4492                	lw	s1,4(sp)
80000b5e:	0141                	addi	sp,sp,16
80000b60:	8082                	ret

80000b62 <sprintf>:
sprintf():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:481
 *
 * @param pStr     torage string.
 * @param pFormat  Format string.
 */
signed int sprintf(char *pStr, const char *pFormat, ...)
{
80000b62:	7139                	addi	sp,sp,-64
80000b64:	ce06                	sw	ra,28(sp)
80000b66:	d432                	sw	a2,40(sp)
80000b68:	d636                	sw	a3,44(sp)
80000b6a:	d83a                	sw	a4,48(sp)
80000b6c:	da3e                	sw	a5,52(sp)
80000b6e:	dc42                	sw	a6,56(sp)
80000b70:	de46                	sw	a7,60(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:486
    va_list ap;
    signed int result;

    // Forward call to vsprintf
    va_start(ap, pFormat);
80000b72:	1030                	addi	a2,sp,40
80000b74:	c632                	sw	a2,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:487
    result = vsprintf(pStr, pFormat, ap);
80000b76:	368d                	jal	800006d8 <vsprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/printf.c:491
    va_end(ap);

    return result;
}
80000b78:	40f2                	lw	ra,28(sp)
80000b7a:	6121                	addi	sp,sp,64
80000b7c:	8082                	ret

80000b7e <periph_init>:
periph_init():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:197
{
80000b7e:	1141                	addi	sp,sp,-16
80000b80:	c606                	sw	ra,12(sp)
80000b82:	c422                	sw	s0,8(sp)
80000b84:	c226                	sw	s1,4(sp)
80000b86:	c04a                	sw	s2,0(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:198
	BSP_led_init();
80000b88:	3ba1                	jal	800008e0 <BSP_led_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:199
	SystemInit();
80000b8a:	33a9                	jal	800008d4 <SystemInit>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:200
	SystemCoreClockUpdate();
80000b8c:	3685                	jal	800006ec <SystemCoreClockUpdate>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:201
	BSP_led_init();
80000b8e:	3b89                	jal	800008e0 <BSP_led_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:202
	UART1_init();
80000b90:	3d01                	jal	800009a0 <UART1_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:203
	retarget_init();
80000b92:	3f31                	jal	80000aae <retarget_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:205
	sprintf(buff,"  K1921VG015 SYSCLK = %d MHz\r\n\0",(int)(SystemCoreClock / 1E6)); 	Send_buff(buff);
80000b94:	9a01a503          	lw	a0,-1632(gp) # 40000120 <SystemCoreClock>
80000b98:	71b000ef          	jal	80001ab2 <__floatunsidf>
80000b9c:	800027b7          	lui	a5,0x80002
80000ba0:	df87a603          	lw	a2,-520(a5) # 80001df8 <__clz_tab+0x190>
80000ba4:	dfc7a683          	lw	a3,-516(a5)
80000ba8:	2e65                	jal	80000f60 <__divdf3>
80000baa:	623000ef          	jal	800019cc <__fixdfsi>
80000bae:	862a                	mv	a2,a0
80000bb0:	800025b7          	lui	a1,0x80002
80000bb4:	b9058913          	addi	s2,a1,-1136 # 80001b90 <_tdata_start>
80000bb8:	b9058593          	addi	a1,a1,-1136
80000bbc:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000bc0:	374d                	jal	80000b62 <sprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:205 (discriminator 1)
80000bc2:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000bc6:	37ad                	jal	80000b30 <Send_buff>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:206
	sprintf(buff,"  UID[0] = 0x%X  UID[1] = 0x%X  UID[2] = 0x%X  UID[3] = 0x%X\r\n\0",PMUSYS->UID[0],PMUSYS->UID[1],PMUSYS->UID[2],PMUSYS->UID[3]); Send_buff(buff);
80000bc8:	3000f4b7          	lui	s1,0x3000f
80000bcc:	1104a603          	lw	a2,272(s1) # 3000f110 <retarget.c.918a4a7b+0x30005e6f>
80000bd0:	1144a683          	lw	a3,276(s1)
80000bd4:	1184a703          	lw	a4,280(s1)
80000bd8:	11c4a783          	lw	a5,284(s1)
80000bdc:	02090593          	addi	a1,s2,32
80000be0:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000be4:	3fbd                	jal	80000b62 <sprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:206 (discriminator 1)
80000be6:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000bea:	3799                	jal	80000b30 <Send_buff>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:207
    sprintf(buff,"  PartNum = 0x%X\r\n\0",(uint16_t)(PMUSYS->UID[3] >> 16)); Send_buff(buff);
80000bec:	11c4a603          	lw	a2,284(s1)
80000bf0:	8241                	srli	a2,a2,0x10
80000bf2:	06090593          	addi	a1,s2,96
80000bf6:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000bfa:	37a5                	jal	80000b62 <sprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:207 (discriminator 1)
80000bfc:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000c00:	3f05                	jal	80000b30 <Send_buff>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:208
    sprintf(buff,"  Start UART DMA\r\n\0"); Send_buff(buff);
80000c02:	07490593          	addi	a1,s2,116
80000c06:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000c0a:	3fa1                	jal	80000b62 <sprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:208 (discriminator 1)
80000c0c:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000c10:	3705                	jal	80000b30 <Send_buff>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:210
}
80000c12:	40b2                	lw	ra,12(sp)
80000c14:	4422                	lw	s0,8(sp)
80000c16:	4492                	lw	s1,4(sp)
80000c18:	4902                	lw	s2,0(sp)
80000c1a:	0141                	addi	sp,sp,16
80000c1c:	8082                	ret

80000c1e <TMR32_IRQHandler>:
TMR32_IRQHandler():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:277

//-- IRQ INTERRUPT HANDLERS ---------------------------------------------------------------
void TMR32_IRQHandler() // раз в 10 мс
{
80000c1e:	1141                	addi	sp,sp,-16
80000c20:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:282
	static uint8_t d = 0;
	static uint8_t last_button_state = 1;
	static uint32_t last_led_update = 0;

	if (cnt_tgl_meows < 100)
80000c22:	9981a703          	lw	a4,-1640(gp) # 40000118 <cnt_tgl_meows>
80000c26:	06300793          	li	a5,99
80000c2a:	0ae7e363          	bltu	a5,a4,80000cd0 <TMR32_IRQHandler+0xb2>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:284
	{
		cnt_tgl_meows++;
80000c2e:	9981a783          	lw	a5,-1640(gp) # 40000118 <cnt_tgl_meows>
80000c32:	0785                	addi	a5,a5,1
80000c34:	98f1ac23          	sw	a5,-1640(gp) # 40000118 <cnt_tgl_meows>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:299
		sprintf(buff, "%d %s\r\n", (int)meows_barks_counter, flag_meows ? "meow \0\0" : "bark \0\0");
		Send_buff(buff);
	}


	uint8_t x = (GPIOA->DATA & PA7_MSK) ? 0 : 1;
80000c38:	280007b7          	lui	a5,0x28000
80000c3c:	439c                	lw	a5,0(a5)
80000c3e:	0807f793          	andi	a5,a5,128
80000c42:	0017b793          	seqz	a5,a5
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:303
	static float Ysm = 1000.0f;
	const float k = 0.2f;

	Ysm = Ysm + k * (x * 1000.0f - Ysm);
80000c46:	d007f7d3          	fcvt.s.w	fa5,a5
80000c4a:	800027b7          	lui	a5,0x80002
80000c4e:	e087a687          	flw	fa3,-504(a5) # 80001e08 <__clz_tab+0x1a0>
80000c52:	10d7f7d3          	fmul.s	fa5,fa5,fa3
80000c56:	8841a707          	flw	fa4,-1916(gp) # 40000004 <Ysm.3>
80000c5a:	08e7f7d3          	fsub.s	fa5,fa5,fa4
80000c5e:	80002737          	lui	a4,0x80002
80000c62:	e0c72607          	flw	fa2,-500(a4) # 80001e0c <__clz_tab+0x1a4>
80000c66:	10c7f7d3          	fmul.s	fa5,fa5,fa2
80000c6a:	00f777d3          	fadd.s	fa5,fa4,fa5
80000c6e:	88f1a227          	fsw	fa5,-1916(gp) # 40000004 <Ysm.3>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:305

	if(Ysm > 1000.0f) Ysm = 1000.0f;
80000c72:	a0f697d3          	flt.s	a5,fa3,fa5
80000c76:	0a078d63          	beqz	a5,80000d30 <TMR32_IRQHandler+0x112>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:305 (discriminator 1)
80000c7a:	80002737          	lui	a4,0x80002
80000c7e:	e0872787          	flw	fa5,-504(a4) # 80001e08 <__clz_tab+0x1a0>
80000c82:	88f1a227          	fsw	fa5,-1916(gp) # 40000004 <Ysm.3>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:312

	// 1 отпущена, 0 нажата
	static uint8_t button_state = 1;
	static uint8_t prev_button_state = 1;

	if (Ysm > 700)
80000c86:	8841a787          	flw	fa5,-1916(gp) # 40000004 <Ysm.3>
80000c8a:	800027b7          	lui	a5,0x80002
80000c8e:	e107a707          	flw	fa4,-496(a5) # 80001e10 <__clz_tab+0x1a8>
80000c92:	a0f717d3          	flt.s	a5,fa4,fa5
80000c96:	c7cd                	beqz	a5,80000d40 <TMR32_IRQHandler+0x122>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:314
	{
		button_state = 1;
80000c98:	4705                	li	a4,1
80000c9a:	88e180a3          	sb	a4,-1919(gp) # 40000001 <button_state.2>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:322
	{
		button_state = 0;
	}


	if (button_state == 0 && prev_button_state == 1)
80000c9e:	8811c783          	lbu	a5,-1919(gp) # 40000001 <button_state.2>
80000ca2:	e791                	bnez	a5,80000cae <TMR32_IRQHandler+0x90>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:322 (discriminator 1)
80000ca4:	8801c683          	lbu	a3,-1920(gp) # 40000000 <prev_button_state.1>
80000ca8:	4705                	li	a4,1
80000caa:	0ae68563          	beq	a3,a4,80000d54 <TMR32_IRQHandler+0x136>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:335
		{
			button_click_counter = 1;
		}
	}

	prev_button_state = button_state;
80000cae:	88f18023          	sb	a5,-1920(gp) # 40000000 <prev_button_state.1>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:337

	if (last_led_update >= 30)
80000cb2:	9901a783          	lw	a5,-1648(gp) # 40000110 <last_led_update.0>
80000cb6:	4775                	li	a4,29
80000cb8:	0af76b63          	bltu	a4,a5,80000d6e <TMR32_IRQHandler+0x150>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:343
	{
		update_leds();
		GPIOB->DATAOUTTGL = PB0_MSK;
		last_led_update = 0;
	}
	else{last_led_update++;}
80000cbc:	0785                	addi	a5,a5,1
80000cbe:	98f1a823          	sw	a5,-1648(gp) # 40000110 <last_led_update.0>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:345

	TMR32->IC = 3;
80000cc2:	300007b7          	lui	a5,0x30000
80000cc6:	470d                	li	a4,3
80000cc8:	cbd8                	sw	a4,20(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:346
}
80000cca:	40b2                	lw	ra,12(sp)
80000ccc:	0141                	addi	sp,sp,16
80000cce:	8082                	ret
80000cd0:	c422                	sw	s0,8(sp)
80000cd2:	c226                	sw	s1,4(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:288
		flag_meows = (flag_meows == 0) ? 1 : 0;
80000cd4:	8881a783          	lw	a5,-1912(gp) # 40000008 <flag_meows>
80000cd8:	0017b793          	seqz	a5,a5
80000cdc:	88f1a423          	sw	a5,-1912(gp) # 40000008 <flag_meows>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:289
		meows_barks_counter++;
80000ce0:	9941a783          	lw	a5,-1644(gp) # 40000114 <meows_barks_counter>
80000ce4:	0785                	addi	a5,a5,1 # 30000001 <retarget.c.918a4a7b+0x2fff6d60>
80000ce6:	98f1aa23          	sw	a5,-1644(gp) # 40000114 <meows_barks_counter>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:290
		cnt_tgl_meows = 0;
80000cea:	9801ac23          	sw	zero,-1640(gp) # 40000118 <cnt_tgl_meows>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:293
		memset(buff, 0, sizeof(buff));
80000cee:	07800613          	li	a2,120
80000cf2:	4581                	li	a1,0
80000cf4:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000cf8:	28d1                	jal	80000dcc <memset>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:294
		sprintf(buff, "%d %s\r\n", (int)meows_barks_counter, flag_meows ? "meow \0\0" : "bark \0\0");
80000cfa:	9941a603          	lw	a2,-1644(gp) # 40000114 <meows_barks_counter>
80000cfe:	8881a783          	lw	a5,-1912(gp) # 40000008 <flag_meows>
80000d02:	c395                	beqz	a5,80000d26 <TMR32_IRQHandler+0x108>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:294 (discriminator 1)
80000d04:	800026b7          	lui	a3,0x80002
80000d08:	c1868693          	addi	a3,a3,-1000 # 80001c18 <_tdata_start+0x88>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:294 (discriminator 4)
80000d0c:	800025b7          	lui	a1,0x80002
80000d10:	dec58593          	addi	a1,a1,-532 # 80001dec <__clz_tab+0x184>
80000d14:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000d18:	35a9                	jal	80000b62 <sprintf>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:295
		Send_buff(buff);
80000d1a:	9ac18513          	addi	a0,gp,-1620 # 4000012c <buff>
80000d1e:	3d09                	jal	80000b30 <Send_buff>
80000d20:	4422                	lw	s0,8(sp)
80000d22:	4492                	lw	s1,4(sp)
80000d24:	bf11                	j	80000c38 <TMR32_IRQHandler+0x1a>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:294 (discriminator 2)
		sprintf(buff, "%d %s\r\n", (int)meows_barks_counter, flag_meows ? "meow \0\0" : "bark \0\0");
80000d26:	800026b7          	lui	a3,0x80002
80000d2a:	c2068693          	addi	a3,a3,-992 # 80001c20 <_tdata_start+0x90>
80000d2e:	bff9                	j	80000d0c <TMR32_IRQHandler+0xee>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:306
	else if(Ysm < 0.0f) Ysm = 0.0f;
80000d30:	f0000753          	fmv.w.x	fa4,zero
80000d34:	a0e797d3          	flt.s	a5,fa5,fa4
80000d38:	d7b9                	beqz	a5,80000c86 <TMR32_IRQHandler+0x68>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:306 (discriminator 1)
80000d3a:	8801a223          	sw	zero,-1916(gp) # 40000004 <Ysm.3>
80000d3e:	b7a1                	j	80000c86 <TMR32_IRQHandler+0x68>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:316
	else if (Ysm < 500)
80000d40:	800027b7          	lui	a5,0x80002
80000d44:	e147a707          	flw	fa4,-492(a5) # 80001e14 <__clz_tab+0x1ac>
80000d48:	a0e797d3          	flt.s	a5,fa5,fa4
80000d4c:	dba9                	beqz	a5,80000c9e <TMR32_IRQHandler+0x80>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:318
		button_state = 0;
80000d4e:	880180a3          	sb	zero,-1919(gp) # 40000001 <button_state.2>
80000d52:	b7b1                	j	80000c9e <TMR32_IRQHandler+0x80>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:325
		if(button_click_counter < (MODES_COUNT - 1))
80000d54:	88c1a703          	lw	a4,-1908(gp) # 4000000c <button_click_counter>
80000d58:	468d                	li	a3,3
80000d5a:	00e6e663          	bltu	a3,a4,80000d66 <TMR32_IRQHandler+0x148>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:327
			button_click_counter++;
80000d5e:	0705                	addi	a4,a4,1
80000d60:	88e1a623          	sw	a4,-1908(gp) # 4000000c <button_click_counter>
80000d64:	b7a9                	j	80000cae <TMR32_IRQHandler+0x90>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:331
			button_click_counter = 1;
80000d66:	4685                	li	a3,1
80000d68:	88d1a623          	sw	a3,-1908(gp) # 4000000c <button_click_counter>
80000d6c:	b789                	j	80000cae <TMR32_IRQHandler+0x90>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:339
		update_leds();
80000d6e:	31e9                	jal	80000a38 <update_leds>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:340
		GPIOB->DATAOUTTGL = PB0_MSK;
80000d70:	280017b7          	lui	a5,0x28001
80000d74:	4705                	li	a4,1
80000d76:	cb98                	sw	a4,16(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:341
		last_led_update = 0;
80000d78:	9801a823          	sw	zero,-1648(gp) # 40000110 <last_led_update.0>
80000d7c:	b799                	j	80000cc2 <TMR32_IRQHandler+0xa4>

80000d7e <trap_handler>:
trap_handler():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:186
#define MCAUSE_EXCEPT_STAMOACCSFAULT    0x7
#define MCAUSE_EXCEPT_ECALLFRM_M_MODE   0xB

void trap_handler (void)
{
	uint32_t mcause_val = read_csr(mcause);
80000d7e:	342027f3          	csrr	a5,mcause
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:188

	if((mcause_val & MCAUSE_INTERRUPT_FLAG) == 0) {
80000d82:	0007c363          	bltz	a5,80000d88 <trap_handler+0xa>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:216
			default: // MCAUSE_EXCEPT UNKNOWN

				break;
		}

		while(1) {}; //TRAP
80000d86:	a001                	j	80000d86 <trap_handler+0x8>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:185
{
80000d88:	1141                	addi	sp,sp,-16
80000d8a:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:219
	} else {
		// handle interrupt
		PLIC_MachHandler();
80000d8c:	dbeff0ef          	jal	8000034a <PLIC_MachHandler>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../platform/source/plic.c:221
	}
}
80000d90:	40b2                	lw	ra,12(sp)
80000d92:	0141                	addi	sp,sp,16
80000d94:	8082                	ret

80000d96 <main>:
main():
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:218
{
80000d96:	1141                	addi	sp,sp,-16
80000d98:	c606                	sw	ra,12(sp)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:220
	periph_init();
80000d9a:	33d5                	jal	80000b7e <periph_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:221
	TMR32_init(500000); // 50 000 000 частота ядра, 500 000 10мс
80000d9c:	0007a537          	lui	a0,0x7a
80000da0:	12050513          	addi	a0,a0,288 # 7a120 <retarget.c.918a4a7b+0x70e7f>
80000da4:	3665                	jal	8000094c <TMR32_init>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:222
	InterruptEnable();
80000da6:	3621                	jal	800008ae <InterruptEnable>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:223
	led_shift = LED0_MSK;
80000da8:	10000713          	li	a4,256
80000dac:	98e1ae23          	sw	a4,-1636(gp) # 4000011c <led_shift>
80000db0:	a039                	j	80000dbe <main+0x28>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:227 (discriminator 3)
	    for(i=0;i<100000; ++i)
80000db2:	0705                	addi	a4,a4,1
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:227 (discriminator 1)
80000db4:	67e1                	lui	a5,0x18
80000db6:	69f78793          	addi	a5,a5,1695 # 1869f <retarget.c.918a4a7b+0xf3fe>
80000dba:	fee7fce3          	bgeu	a5,a4,80000db2 <main+0x1c>
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:226
		UART1->DR = 0x053;
80000dbe:	300077b7          	lui	a5,0x30007
80000dc2:	05300713          	li	a4,83
80000dc6:	c398                	sw	a4,0(a5)
D:\temp\K1921VG015\proj\Run_leds__2\Debug/../main.c:227
	    for(i=0;i<100000; ++i)
80000dc8:	4701                	li	a4,0
80000dca:	b7ed                	j	80000db4 <main+0x1e>

80000dcc <memset>:
memset():
80000dcc:	433d                	li	t1,15
80000dce:	872a                	mv	a4,a0
80000dd0:	02c37363          	bgeu	t1,a2,80000df6 <memset+0x2a>
80000dd4:	00f77793          	andi	a5,a4,15
80000dd8:	efbd                	bnez	a5,80000e56 <memset+0x8a>
80000dda:	e5ad                	bnez	a1,80000e44 <memset+0x78>
80000ddc:	ff067693          	andi	a3,a2,-16
80000de0:	8a3d                	andi	a2,a2,15
80000de2:	96ba                	add	a3,a3,a4
80000de4:	c30c                	sw	a1,0(a4)
80000de6:	c34c                	sw	a1,4(a4)
80000de8:	c70c                	sw	a1,8(a4)
80000dea:	c74c                	sw	a1,12(a4)
80000dec:	0741                	addi	a4,a4,16
80000dee:	fed76be3          	bltu	a4,a3,80000de4 <memset+0x18>
80000df2:	e211                	bnez	a2,80000df6 <memset+0x2a>
80000df4:	8082                	ret
80000df6:	40c306b3          	sub	a3,t1,a2
80000dfa:	068a                	slli	a3,a3,0x2
80000dfc:	00000297          	auipc	t0,0x0
80000e00:	9696                	add	a3,a3,t0
80000e02:	00a68067          	jr	10(a3)
80000e06:	00b70723          	sb	a1,14(a4)
80000e0a:	00b706a3          	sb	a1,13(a4)
80000e0e:	00b70623          	sb	a1,12(a4)
80000e12:	00b705a3          	sb	a1,11(a4)
80000e16:	00b70523          	sb	a1,10(a4)
80000e1a:	00b704a3          	sb	a1,9(a4)
80000e1e:	00b70423          	sb	a1,8(a4)
80000e22:	00b703a3          	sb	a1,7(a4)
80000e26:	00b70323          	sb	a1,6(a4)
80000e2a:	00b702a3          	sb	a1,5(a4)
80000e2e:	00b70223          	sb	a1,4(a4)
80000e32:	00b701a3          	sb	a1,3(a4)
80000e36:	00b70123          	sb	a1,2(a4)
80000e3a:	00b700a3          	sb	a1,1(a4)
80000e3e:	00b70023          	sb	a1,0(a4)
80000e42:	8082                	ret
80000e44:	0ff5f593          	zext.b	a1,a1
80000e48:	00859693          	slli	a3,a1,0x8
80000e4c:	8dd5                	or	a1,a1,a3
80000e4e:	01059693          	slli	a3,a1,0x10
80000e52:	8dd5                	or	a1,a1,a3
80000e54:	b761                	j	80000ddc <memset+0x10>
80000e56:	00279693          	slli	a3,a5,0x2
80000e5a:	00000297          	auipc	t0,0x0
80000e5e:	9696                	add	a3,a3,t0
80000e60:	8286                	mv	t0,ra
80000e62:	fa8680e7          	jalr	-88(a3)
80000e66:	8096                	mv	ra,t0
80000e68:	17c1                	addi	a5,a5,-16 # 30006ff0 <retarget.c.918a4a7b+0x2fffdd4f>
80000e6a:	8f1d                	sub	a4,a4,a5
80000e6c:	963e                	add	a2,a2,a5
80000e6e:	f8c374e3          	bgeu	t1,a2,80000df6 <memset+0x2a>
80000e72:	b7a5                	j	80000dda <memset+0xe>

80000e74 <memcpy>:
memcpy():
80000e74:	00a5c7b3          	xor	a5,a1,a0
80000e78:	8b8d                	andi	a5,a5,3
80000e7a:	00c508b3          	add	a7,a0,a2
80000e7e:	e7b1                	bnez	a5,80000eca <memcpy+0x56>
80000e80:	478d                	li	a5,3
80000e82:	04c7f463          	bgeu	a5,a2,80000eca <memcpy+0x56>
80000e86:	00357793          	andi	a5,a0,3
80000e8a:	872a                	mv	a4,a0
80000e8c:	e7dd                	bnez	a5,80000f3a <memcpy+0xc6>
80000e8e:	ffc8f613          	andi	a2,a7,-4
80000e92:	40e606b3          	sub	a3,a2,a4
80000e96:	02000793          	li	a5,32
80000e9a:	04d7c463          	blt	a5,a3,80000ee2 <memcpy+0x6e>
80000e9e:	86ae                	mv	a3,a1
80000ea0:	87ba                	mv	a5,a4
80000ea2:	02c77163          	bgeu	a4,a2,80000ec4 <memcpy+0x50>
80000ea6:	0006a803          	lw	a6,0(a3)
80000eaa:	0791                	addi	a5,a5,4
80000eac:	0691                	addi	a3,a3,4
80000eae:	ff07ae23          	sw	a6,-4(a5)
80000eb2:	fec7eae3          	bltu	a5,a2,80000ea6 <memcpy+0x32>
80000eb6:	167d                	addi	a2,a2,-1
80000eb8:	8e19                	sub	a2,a2,a4
80000eba:	9a71                	andi	a2,a2,-4
80000ebc:	0591                	addi	a1,a1,4
80000ebe:	0711                	addi	a4,a4,4
80000ec0:	95b2                	add	a1,a1,a2
80000ec2:	9732                	add	a4,a4,a2
80000ec4:	01176663          	bltu	a4,a7,80000ed0 <memcpy+0x5c>
80000ec8:	8082                	ret
80000eca:	872a                	mv	a4,a0
80000ecc:	ff157ee3          	bgeu	a0,a7,80000ec8 <memcpy+0x54>
80000ed0:	0005c783          	lbu	a5,0(a1)
80000ed4:	0705                	addi	a4,a4,1
80000ed6:	0585                	addi	a1,a1,1
80000ed8:	fef70fa3          	sb	a5,-1(a4)
80000edc:	fee89ae3          	bne	a7,a4,80000ed0 <memcpy+0x5c>
80000ee0:	8082                	ret
80000ee2:	5194                	lw	a3,32(a1)
80000ee4:	0005a383          	lw	t2,0(a1)
80000ee8:	0045a283          	lw	t0,4(a1)
80000eec:	0085af83          	lw	t6,8(a1)
80000ef0:	00c5af03          	lw	t5,12(a1)
80000ef4:	0105ae83          	lw	t4,16(a1)
80000ef8:	0145ae03          	lw	t3,20(a1)
80000efc:	0185a303          	lw	t1,24(a1)
80000f00:	01c5a803          	lw	a6,28(a1)
80000f04:	02470713          	addi	a4,a4,36
80000f08:	fed72e23          	sw	a3,-4(a4)
80000f0c:	fc772e23          	sw	t2,-36(a4)
80000f10:	40e606b3          	sub	a3,a2,a4
80000f14:	fe572023          	sw	t0,-32(a4)
80000f18:	fff72223          	sw	t6,-28(a4)
80000f1c:	ffe72423          	sw	t5,-24(a4)
80000f20:	ffd72623          	sw	t4,-20(a4)
80000f24:	ffc72823          	sw	t3,-16(a4)
80000f28:	fe672a23          	sw	t1,-12(a4)
80000f2c:	ff072c23          	sw	a6,-8(a4)
80000f30:	02458593          	addi	a1,a1,36
80000f34:	fad7c7e3          	blt	a5,a3,80000ee2 <memcpy+0x6e>
80000f38:	b79d                	j	80000e9e <memcpy+0x2a>
80000f3a:	0005c683          	lbu	a3,0(a1)
80000f3e:	0705                	addi	a4,a4,1
80000f40:	00377793          	andi	a5,a4,3
80000f44:	fed70fa3          	sb	a3,-1(a4)
80000f48:	0585                	addi	a1,a1,1
80000f4a:	d3b1                	beqz	a5,80000e8e <memcpy+0x1a>
80000f4c:	0005c683          	lbu	a3,0(a1)
80000f50:	0705                	addi	a4,a4,1
80000f52:	00377793          	andi	a5,a4,3
80000f56:	fed70fa3          	sb	a3,-1(a4)
80000f5a:	0585                	addi	a1,a1,1
80000f5c:	fff9                	bnez	a5,80000f3a <memcpy+0xc6>
80000f5e:	bf05                	j	80000e8e <memcpy+0x1a>

80000f60 <__divdf3>:
__divdf3():
80000f60:	7179                	addi	sp,sp,-48
80000f62:	d422                	sw	s0,40(sp)
80000f64:	d04a                	sw	s2,32(sp)
80000f66:	c266                	sw	s9,4(sp)
80000f68:	d606                	sw	ra,44(sp)
80000f6a:	d226                	sw	s1,36(sp)
80000f6c:	ce4e                	sw	s3,28(sp)
80000f6e:	cc52                	sw	s4,24(sp)
80000f70:	ca56                	sw	s5,20(sp)
80000f72:	c85a                	sw	s6,16(sp)
80000f74:	c65e                	sw	s7,12(sp)
80000f76:	c462                	sw	s8,8(sp)
80000f78:	c06a                	sw	s10,0(sp)
80000f7a:	842a                	mv	s0,a0
80000f7c:	8cb2                	mv	s9,a2
80000f7e:	8936                	mv	s2,a3
80000f80:	00202af3          	frrm	s5
80000f84:	0145d793          	srli	a5,a1,0x14
80000f88:	00c59493          	slli	s1,a1,0xc
80000f8c:	7ff7f793          	andi	a5,a5,2047
80000f90:	80b1                	srli	s1,s1,0xc
80000f92:	01f5db13          	srli	s6,a1,0x1f
80000f96:	12078863          	beqz	a5,800010c6 <__divdf3+0x166>
80000f9a:	7ff00713          	li	a4,2047
80000f9e:	06e78d63          	beq	a5,a4,80001018 <__divdf3+0xb8>
80000fa2:	048e                	slli	s1,s1,0x3
80000fa4:	01d55b93          	srli	s7,a0,0x1d
80000fa8:	009bebb3          	or	s7,s7,s1
80000fac:	00800737          	lui	a4,0x800
80000fb0:	c0178a13          	addi	s4,a5,-1023
80000fb4:	00351c13          	slli	s8,a0,0x3
80000fb8:	00ebebb3          	or	s7,s7,a4
80000fbc:	4481                	li	s1,0
80000fbe:	4d01                	li	s10,0
80000fc0:	4981                	li	s3,0
80000fc2:	01495793          	srli	a5,s2,0x14
80000fc6:	00c91413          	slli	s0,s2,0xc
80000fca:	7ff7f793          	andi	a5,a5,2047
80000fce:	8031                	srli	s0,s0,0xc
80000fd0:	01f95913          	srli	s2,s2,0x1f
80000fd4:	8666                	mv	a2,s9
80000fd6:	c7ad                	beqz	a5,80001040 <__divdf3+0xe0>
80000fd8:	7ff00713          	li	a4,2047
80000fdc:	0ce78763          	beq	a5,a4,800010aa <__divdf3+0x14a>
80000fe0:	040e                	slli	s0,s0,0x3
80000fe2:	01dcd713          	srli	a4,s9,0x1d
80000fe6:	8f41                	or	a4,a4,s0
80000fe8:	c0178793          	addi	a5,a5,-1023
80000fec:	00800437          	lui	s0,0x800
80000ff0:	40fa0a33          	sub	s4,s4,a5
80000ff4:	003c9613          	slli	a2,s9,0x3
80000ff8:	8c59                	or	s0,s0,a4
80000ffa:	4581                	li	a1,0
80000ffc:	47bd                	li	a5,15
80000ffe:	012b4733          	xor	a4,s6,s2
80001002:	1a97ea63          	bltu	a5,s1,800011b6 <__divdf3+0x256>
80001006:	00001697          	auipc	a3,0x1
8000100a:	c2268693          	addi	a3,a3,-990 # 80001c28 <_tdata_start+0x98>
8000100e:	048a                	slli	s1,s1,0x2
80001010:	94b6                	add	s1,s1,a3
80001012:	409c                	lw	a5,0(s1)
80001014:	97b6                	add	a5,a5,a3
80001016:	8782                	jr	a5
80001018:	00a4ebb3          	or	s7,s1,a0
8000101c:	100b9c63          	bnez	s7,80001134 <__divdf3+0x1d4>
80001020:	8a3e                	mv	s4,a5
80001022:	01495793          	srli	a5,s2,0x14
80001026:	00c91413          	slli	s0,s2,0xc
8000102a:	7ff7f793          	andi	a5,a5,2047
8000102e:	4c01                	li	s8,0
80001030:	44a1                	li	s1,8
80001032:	4d09                	li	s10,2
80001034:	4981                	li	s3,0
80001036:	8031                	srli	s0,s0,0xc
80001038:	01f95913          	srli	s2,s2,0x1f
8000103c:	8666                	mv	a2,s9
8000103e:	ffc9                	bnez	a5,80000fd8 <__divdf3+0x78>
80001040:	019467b3          	or	a5,s0,s9
80001044:	10078963          	beqz	a5,80001156 <__divdf3+0x1f6>
80001048:	38040663          	beqz	s0,800013d4 <__divdf3+0x474>
8000104c:	8522                	mv	a0,s0
8000104e:	2d5000ef          	jal	80001b22 <__clzsi2>
80001052:	87aa                	mv	a5,a0
80001054:	ff550693          	addi	a3,a0,-11
80001058:	4775                	li	a4,29
8000105a:	ff878613          	addi	a2,a5,-8
8000105e:	8f15                	sub	a4,a4,a3
80001060:	00c41433          	sll	s0,s0,a2
80001064:	00ecd733          	srl	a4,s9,a4
80001068:	8c59                	or	s0,s0,a4
8000106a:	00cc9633          	sll	a2,s9,a2
8000106e:	97d2                	add	a5,a5,s4
80001070:	3f378a13          	addi	s4,a5,1011
80001074:	4581                	li	a1,0
80001076:	b759                	j	80000ffc <__divdf3+0x9c>
80001078:	4781                	li	a5,0
8000107a:	4401                	li	s0,0
8000107c:	4681                	li	a3,0
8000107e:	07d2                	slli	a5,a5,0x14
80001080:	8fc1                	or	a5,a5,s0
80001082:	077e                	slli	a4,a4,0x1f
80001084:	8fd9                	or	a5,a5,a4
80001086:	8536                	mv	a0,a3
80001088:	85be                	mv	a1,a5
8000108a:	10099063          	bnez	s3,8000118a <__divdf3+0x22a>
8000108e:	50b2                	lw	ra,44(sp)
80001090:	5422                	lw	s0,40(sp)
80001092:	5492                	lw	s1,36(sp)
80001094:	5902                	lw	s2,32(sp)
80001096:	49f2                	lw	s3,28(sp)
80001098:	4a62                	lw	s4,24(sp)
8000109a:	4ad2                	lw	s5,20(sp)
8000109c:	4b42                	lw	s6,16(sp)
8000109e:	4bb2                	lw	s7,12(sp)
800010a0:	4c22                	lw	s8,8(sp)
800010a2:	4c92                	lw	s9,4(sp)
800010a4:	4d02                	lw	s10,0(sp)
800010a6:	6145                	addi	sp,sp,48
800010a8:	8082                	ret
800010aa:	019467b3          	or	a5,s0,s9
800010ae:	801a0a13          	addi	s4,s4,-2047
800010b2:	cbc5                	beqz	a5,80001162 <__divdf3+0x202>
800010b4:	000807b7          	lui	a5,0x80
800010b8:	0034e493          	ori	s1,s1,3
800010bc:	458d                	li	a1,3
800010be:	f2f47fe3          	bgeu	s0,a5,80000ffc <__divdf3+0x9c>
800010c2:	49c1                	li	s3,16
800010c4:	bf25                	j	80000ffc <__divdf3+0x9c>
800010c6:	00a4ebb3          	or	s7,s1,a0
800010ca:	080b8063          	beqz	s7,8000114a <__divdf3+0x1ea>
800010ce:	2e048663          	beqz	s1,800013ba <__divdf3+0x45a>
800010d2:	8526                	mv	a0,s1
800010d4:	24f000ef          	jal	80001b22 <__clzsi2>
800010d8:	872a                	mv	a4,a0
800010da:	ff550793          	addi	a5,a0,-11
800010de:	4bf5                	li	s7,29
800010e0:	ff870c13          	addi	s8,a4,-8 # 7ffff8 <retarget.c.918a4a7b+0x7f6d57>
800010e4:	40fb8bb3          	sub	s7,s7,a5
800010e8:	018494b3          	sll	s1,s1,s8
800010ec:	01745bb3          	srl	s7,s0,s7
800010f0:	009bebb3          	or	s7,s7,s1
800010f4:	01841c33          	sll	s8,s0,s8
800010f8:	c0d00793          	li	a5,-1011
800010fc:	40e78a33          	sub	s4,a5,a4
80001100:	4481                	li	s1,0
80001102:	4d01                	li	s10,0
80001104:	4981                	li	s3,0
80001106:	bd75                	j	80000fc2 <__divdf3+0x62>
80001108:	895a                	mv	s2,s6
8000110a:	845e                	mv	s0,s7
8000110c:	8662                	mv	a2,s8
8000110e:	4789                	li	a5,2
80001110:	04fd0f63          	beq	s10,a5,8000116e <__divdf3+0x20e>
80001114:	478d                	li	a5,3
80001116:	06fd0d63          	beq	s10,a5,80001190 <__divdf3+0x230>
8000111a:	4785                	li	a5,1
8000111c:	3ffa0f93          	addi	t6,s4,1023
80001120:	30fd1a63          	bne	s10,a5,80001434 <__divdf3+0x4d4>
80001124:	00197713          	andi	a4,s2,1
80001128:	4781                	li	a5,0
8000112a:	4401                	li	s0,0
8000112c:	4681                	li	a3,0
8000112e:	bf81                	j	8000107e <__divdf3+0x11e>
80001130:	8d2e                	mv	s10,a1
80001132:	bff1                	j	8000110e <__divdf3+0x1ae>
80001134:	000809b7          	lui	s3,0x80
80001138:	0134b9b3          	sltu	s3,s1,s3
8000113c:	8ba6                	mv	s7,s1
8000113e:	8c2a                	mv	s8,a0
80001140:	8a3e                	mv	s4,a5
80001142:	0992                	slli	s3,s3,0x4
80001144:	44b1                	li	s1,12
80001146:	4d0d                	li	s10,3
80001148:	bdad                	j	80000fc2 <__divdf3+0x62>
8000114a:	4c01                	li	s8,0
8000114c:	4491                	li	s1,4
8000114e:	4a01                	li	s4,0
80001150:	4d05                	li	s10,1
80001152:	4981                	li	s3,0
80001154:	b5bd                	j	80000fc2 <__divdf3+0x62>
80001156:	0014e493          	ori	s1,s1,1
8000115a:	4401                	li	s0,0
8000115c:	4601                	li	a2,0
8000115e:	4585                	li	a1,1
80001160:	bd71                	j	80000ffc <__divdf3+0x9c>
80001162:	0024e493          	ori	s1,s1,2
80001166:	4401                	li	s0,0
80001168:	4601                	li	a2,0
8000116a:	4589                	li	a1,2
8000116c:	bd41                	j	80000ffc <__divdf3+0x9c>
8000116e:	00197713          	andi	a4,s2,1
80001172:	7ff00793          	li	a5,2047
80001176:	4401                	li	s0,0
80001178:	4681                	li	a3,0
8000117a:	b711                	j	8000107e <__divdf3+0x11e>
8000117c:	00001797          	auipc	a5,0x1
80001180:	c8478793          	addi	a5,a5,-892 # 80001e00 <__clz_tab+0x198>
80001184:	4388                	lw	a0,0(a5)
80001186:	43cc                	lw	a1,4(a5)
80001188:	49c1                	li	s3,16
8000118a:	0019a073          	csrs	fflags,s3
8000118e:	b701                	j	8000108e <__divdf3+0x12e>
80001190:	4701                	li	a4,0
80001192:	7ff00793          	li	a5,2047
80001196:	00080437          	lui	s0,0x80
8000119a:	4681                	li	a3,0
8000119c:	b5cd                	j	8000107e <__divdf3+0x11e>
8000119e:	077e                	slli	a4,a4,0x1f
800011a0:	7ff007b7          	lui	a5,0x7ff00
800011a4:	8fd9                	or	a5,a5,a4
800011a6:	4701                	li	a4,0
800011a8:	853a                	mv	a0,a4
800011aa:	85be                	mv	a1,a5
800011ac:	0089e993          	ori	s3,s3,8
800011b0:	0019a073          	csrs	fflags,s3
800011b4:	bde9                	j	8000108e <__divdf3+0x12e>
800011b6:	27746363          	bltu	s0,s7,8000141c <__divdf3+0x4bc>
800011ba:	248b8f63          	beq	s7,s0,80001418 <__divdf3+0x4b8>
800011be:	87e2                	mv	a5,s8
800011c0:	1a7d                	addi	s4,s4,-1
800011c2:	4c01                	li	s8,0
800011c4:	00841693          	slli	a3,s0,0x8
800011c8:	0106d313          	srli	t1,a3,0x10
800011cc:	026bd433          	divu	s0,s7,t1
800011d0:	01865593          	srli	a1,a2,0x18
800011d4:	8dd5                	or	a1,a1,a3
800011d6:	01059893          	slli	a7,a1,0x10
800011da:	0108d893          	srli	a7,a7,0x10
800011de:	00861813          	slli	a6,a2,0x8
800011e2:	0107d693          	srli	a3,a5,0x10
800011e6:	026bfbb3          	remu	s7,s7,t1
800011ea:	02888633          	mul	a2,a7,s0
800011ee:	0bc2                	slli	s7,s7,0x10
800011f0:	0176e6b3          	or	a3,a3,s7
800011f4:	00c6fb63          	bgeu	a3,a2,8000120a <__divdf3+0x2aa>
800011f8:	96ae                	add	a3,a3,a1
800011fa:	fff40513          	addi	a0,s0,-1 # 7ffff <retarget.c.918a4a7b+0x76d5e>
800011fe:	28b6e663          	bltu	a3,a1,8000148a <__divdf3+0x52a>
80001202:	28c6f463          	bgeu	a3,a2,8000148a <__divdf3+0x52a>
80001206:	1479                	addi	s0,s0,-2
80001208:	96ae                	add	a3,a3,a1
8000120a:	8e91                	sub	a3,a3,a2
8000120c:	0266d633          	divu	a2,a3,t1
80001210:	07c2                	slli	a5,a5,0x10
80001212:	83c1                	srli	a5,a5,0x10
80001214:	0266f6b3          	remu	a3,a3,t1
80001218:	02c88fb3          	mul	t6,a7,a2
8000121c:	06c2                	slli	a3,a3,0x10
8000121e:	8fd5                	or	a5,a5,a3
80001220:	01f7fb63          	bgeu	a5,t6,80001236 <__divdf3+0x2d6>
80001224:	97ae                	add	a5,a5,a1
80001226:	fff60693          	addi	a3,a2,-1
8000122a:	24b7ee63          	bltu	a5,a1,80001486 <__divdf3+0x526>
8000122e:	25f7fc63          	bgeu	a5,t6,80001486 <__divdf3+0x526>
80001232:	1679                	addi	a2,a2,-2
80001234:	97ae                	add	a5,a5,a1
80001236:	0442                	slli	s0,s0,0x10
80001238:	8c51                	or	s0,s0,a2
8000123a:	01041693          	slli	a3,s0,0x10
8000123e:	01081e13          	slli	t3,a6,0x10
80001242:	82c1                	srli	a3,a3,0x10
80001244:	010e5e13          	srli	t3,t3,0x10
80001248:	01085e93          	srli	t4,a6,0x10
8000124c:	01045513          	srli	a0,s0,0x10
80001250:	02de8633          	mul	a2,t4,a3
80001254:	41f787b3          	sub	a5,a5,t6
80001258:	02de0f33          	mul	t5,t3,a3
8000125c:	03c50fb3          	mul	t6,a0,t3
80001260:	010f5693          	srli	a3,t5,0x10
80001264:	967e                	add	a2,a2,t6
80001266:	96b2                	add	a3,a3,a2
80001268:	03d50533          	mul	a0,a0,t4
8000126c:	01f6f463          	bgeu	a3,t6,80001274 <__divdf3+0x314>
80001270:	6641                	lui	a2,0x10
80001272:	9532                	add	a0,a0,a2
80001274:	010f1f93          	slli	t6,t5,0x10
80001278:	0106d613          	srli	a2,a3,0x10
8000127c:	01069f13          	slli	t5,a3,0x10
80001280:	010fdf93          	srli	t6,t6,0x10
80001284:	00a606b3          	add	a3,a2,a0
80001288:	9f7e                	add	t5,t5,t6
8000128a:	16d7e563          	bltu	a5,a3,800013f4 <__divdf3+0x494>
8000128e:	16d78163          	beq	a5,a3,800013f0 <__divdf3+0x490>
80001292:	41ec0f33          	sub	t5,s8,t5
80001296:	8f95                	sub	a5,a5,a3
80001298:	01ec3c33          	sltu	s8,s8,t5
8000129c:	418786b3          	sub	a3,a5,s8
800012a0:	3ffa0f93          	addi	t6,s4,1023
800012a4:	87fe                	mv	a5,t6
800012a6:	893a                	mv	s2,a4
800012a8:	2ad58363          	beq	a1,a3,8000154e <__divdf3+0x5ee>
800012ac:	0266d633          	divu	a2,a3,t1
800012b0:	010f5513          	srli	a0,t5,0x10
800012b4:	0266f6b3          	remu	a3,a3,t1
800012b8:	02c882b3          	mul	t0,a7,a2
800012bc:	06c2                	slli	a3,a3,0x10
800012be:	8ec9                	or	a3,a3,a0
800012c0:	0056fb63          	bgeu	a3,t0,800012d6 <__divdf3+0x376>
800012c4:	96ae                	add	a3,a3,a1
800012c6:	fff60513          	addi	a0,a2,-1 # ffff <retarget.c.918a4a7b+0x6d5e>
800012ca:	2cb6e663          	bltu	a3,a1,80001596 <__divdf3+0x636>
800012ce:	2c56f463          	bgeu	a3,t0,80001596 <__divdf3+0x636>
800012d2:	1679                	addi	a2,a2,-2
800012d4:	96ae                	add	a3,a3,a1
800012d6:	405686b3          	sub	a3,a3,t0
800012da:	0266d533          	divu	a0,a3,t1
800012de:	0f42                	slli	t5,t5,0x10
800012e0:	010f5f13          	srli	t5,t5,0x10
800012e4:	0266f6b3          	remu	a3,a3,t1
800012e8:	02a888b3          	mul	a7,a7,a0
800012ec:	06c2                	slli	a3,a3,0x10
800012ee:	00df6f33          	or	t5,t5,a3
800012f2:	011f7b63          	bgeu	t5,a7,80001308 <__divdf3+0x3a8>
800012f6:	9f2e                	add	t5,t5,a1
800012f8:	fff50693          	addi	a3,a0,-1
800012fc:	28bf6b63          	bltu	t5,a1,80001592 <__divdf3+0x632>
80001300:	291f7963          	bgeu	t5,a7,80001592 <__divdf3+0x632>
80001304:	1579                	addi	a0,a0,-2
80001306:	9f2e                	add	t5,t5,a1
80001308:	0642                	slli	a2,a2,0x10
8000130a:	8e49                	or	a2,a2,a0
8000130c:	01061693          	slli	a3,a2,0x10
80001310:	82c1                	srli	a3,a3,0x10
80001312:	01065293          	srli	t0,a2,0x10
80001316:	02de8533          	mul	a0,t4,a3
8000131a:	411f0f33          	sub	t5,t5,a7
8000131e:	03c28333          	mul	t1,t0,t3
80001322:	03c68e33          	mul	t3,a3,t3
80001326:	951a                	add	a0,a0,t1
80001328:	010e5693          	srli	a3,t3,0x10
8000132c:	96aa                	add	a3,a3,a0
8000132e:	025e8eb3          	mul	t4,t4,t0
80001332:	0066f463          	bgeu	a3,t1,8000133a <__divdf3+0x3da>
80001336:	6541                	lui	a0,0x10
80001338:	9eaa                	add	t4,t4,a0
8000133a:	0106d513          	srli	a0,a3,0x10
8000133e:	0e42                	slli	t3,t3,0x10
80001340:	010e5e13          	srli	t3,t3,0x10
80001344:	06c2                	slli	a3,a3,0x10
80001346:	9576                	add	a0,a0,t4
80001348:	96f2                	add	a3,a3,t3
8000134a:	0eaf7263          	bgeu	t5,a0,8000142e <__divdf3+0x4ce>
8000134e:	9f2e                	add	t5,t5,a1
80001350:	88fa                	mv	a7,t5
80001352:	fff60313          	addi	t1,a2,-1
80001356:	32bf6a63          	bltu	t5,a1,8000168a <__divdf3+0x72a>
8000135a:	30af6b63          	bltu	t5,a0,80001670 <__divdf3+0x710>
8000135e:	3eaf0a63          	beq	t5,a0,80001752 <__divdf3+0x7f2>
80001362:	861a                	mv	a2,t1
80001364:	c0200693          	li	a3,-1022
80001368:	00166613          	ori	a2,a2,1
8000136c:	22da4763          	blt	s4,a3,8000159a <__divdf3+0x63a>
80001370:	4689                	li	a3,2
80001372:	0019e993          	ori	s3,s3,1
80001376:	32da8b63          	beq	s5,a3,800016ac <__divdf3+0x74c>
8000137a:	468d                	li	a3,3
8000137c:	30da8b63          	beq	s5,a3,80001692 <__divdf3+0x732>
80001380:	360a8163          	beqz	s5,800016e2 <__divdf3+0x782>
80001384:	00741693          	slli	a3,s0,0x7
80001388:	1a06c063          	bltz	a3,80001528 <__divdf3+0x5c8>
8000138c:	7fe00693          	li	a3,2046
80001390:	1bf6d663          	bge	a3,t6,8000153c <__divdf3+0x5dc>
80001394:	0c0a8f63          	beqz	s5,80001472 <__divdf3+0x512>
80001398:	00100637          	lui	a2,0x100
8000139c:	167d                	addi	a2,a2,-1 # fffff <retarget.c.918a4a7b+0xf6d5e>
8000139e:	7fe00793          	li	a5,2046
800013a2:	56fd                	li	a3,-1
800013a4:	07d2                	slli	a5,a5,0x14
800013a6:	8fd1                	or	a5,a5,a2
800013a8:	077e                	slli	a4,a4,0x1f
800013aa:	8fd9                	or	a5,a5,a4
800013ac:	8536                	mv	a0,a3
800013ae:	85be                	mv	a1,a5
800013b0:	0059e993          	ori	s3,s3,5
800013b4:	0019a073          	csrs	fflags,s3
800013b8:	b9d9                	j	8000108e <__divdf3+0x12e>
800013ba:	27a5                	jal	80001b22 <__clzsi2>
800013bc:	01550793          	addi	a5,a0,21 # 10015 <retarget.c.918a4a7b+0x6d74>
800013c0:	46f1                	li	a3,28
800013c2:	02050713          	addi	a4,a0,32
800013c6:	d0f6dce3          	bge	a3,a5,800010de <__divdf3+0x17e>
800013ca:	1561                	addi	a0,a0,-8
800013cc:	00a41bb3          	sll	s7,s0,a0
800013d0:	4c01                	li	s8,0
800013d2:	b31d                	j	800010f8 <__divdf3+0x198>
800013d4:	8566                	mv	a0,s9
800013d6:	27b1                	jal	80001b22 <__clzsi2>
800013d8:	01550693          	addi	a3,a0,21
800013dc:	4771                	li	a4,28
800013de:	02050793          	addi	a5,a0,32
800013e2:	c6d75be3          	bge	a4,a3,80001058 <__divdf3+0xf8>
800013e6:	1561                	addi	a0,a0,-8
800013e8:	00ac9433          	sll	s0,s9,a0
800013ec:	4601                	li	a2,0
800013ee:	b141                	j	8000106e <__divdf3+0x10e>
800013f0:	ebec71e3          	bgeu	s8,t5,80001292 <__divdf3+0x332>
800013f4:	010c0633          	add	a2,s8,a6
800013f8:	01863533          	sltu	a0,a2,s8
800013fc:	00b50fb3          	add	t6,a0,a1
80001400:	97fe                	add	a5,a5,t6
80001402:	8c32                	mv	s8,a2
80001404:	fff40f93          	addi	t6,s0,-1
80001408:	06f5fa63          	bgeu	a1,a5,8000147c <__divdf3+0x51c>
8000140c:	10d7e663          	bltu	a5,a3,80001518 <__divdf3+0x5b8>
80001410:	10f68263          	beq	a3,a5,80001514 <__divdf3+0x5b4>
80001414:	847e                	mv	s0,t6
80001416:	bdb5                	j	80001292 <__divdf3+0x332>
80001418:	dacc63e3          	bltu	s8,a2,800011be <__divdf3+0x25e>
8000141c:	01fb9793          	slli	a5,s7,0x1f
80001420:	001c5693          	srli	a3,s8,0x1
80001424:	001bdb93          	srli	s7,s7,0x1
80001428:	8fd5                	or	a5,a5,a3
8000142a:	0c7e                	slli	s8,s8,0x1f
8000142c:	bb61                	j	800011c4 <__divdf3+0x264>
8000142e:	f2af1be3          	bne	t5,a0,80001364 <__divdf3+0x404>
80001432:	fe91                	bnez	a3,8000134e <__divdf3+0x3ee>
80001434:	87fe                	mv	a5,t6
80001436:	05f05c63          	blez	t6,8000148e <__divdf3+0x52e>
8000143a:	00767713          	andi	a4,a2,7
8000143e:	48071763          	bnez	a4,800018cc <__divdf3+0x96c>
80001442:	00197713          	andi	a4,s2,1
80001446:	00741693          	slli	a3,s0,0x7
8000144a:	0006d863          	bgez	a3,8000145a <__divdf3+0x4fa>
8000144e:	ff0006b7          	lui	a3,0xff000
80001452:	16fd                	addi	a3,a3,-1 # feffffff <__data_source_start+0x7effe1d7>
80001454:	400a0793          	addi	a5,s4,1024
80001458:	8c75                	and	s0,s0,a3
8000145a:	7fe00693          	li	a3,2046
8000145e:	0cf6df63          	bge	a3,a5,8000153c <__divdf3+0x5dc>
80001462:	4789                	li	a5,2
80001464:	26fa8663          	beq	s5,a5,800016d0 <__divdf3+0x770>
80001468:	478d                	li	a5,3
8000146a:	f2fa95e3          	bne	s5,a5,80001394 <__divdf3+0x434>
8000146e:	f20915e3          	bnez	s2,80001398 <__divdf3+0x438>
80001472:	7ff00793          	li	a5,2047
80001476:	4601                	li	a2,0
80001478:	4681                	li	a3,0
8000147a:	b72d                	j	800013a4 <__divdf3+0x444>
8000147c:	f8f59ce3          	bne	a1,a5,80001414 <__divdf3+0x4b4>
80001480:	d551                	beqz	a0,8000140c <__divdf3+0x4ac>
80001482:	847e                	mv	s0,t6
80001484:	b539                	j	80001292 <__divdf3+0x332>
80001486:	8636                	mv	a2,a3
80001488:	b37d                	j	80001236 <__divdf3+0x2d6>
8000148a:	842a                	mv	s0,a0
8000148c:	bbbd                	j	8000120a <__divdf3+0x2aa>
8000148e:	1a0f9063          	bnez	t6,8000162e <__divdf3+0x6ce>
80001492:	00767713          	andi	a4,a2,7
80001496:	00165793          	srli	a5,a2,0x1
8000149a:	4c071563          	bnez	a4,80001964 <__divdf3+0xa04>
8000149e:	01845613          	srli	a2,s0,0x18
800014a2:	8a05                	andi	a2,a2,1
800014a4:	00164613          	xori	a2,a2,1
800014a8:	4a7d                	li	s4,31
800014aa:	4685                	li	a3,1
800014ac:	01441a33          	sll	s4,s0,s4
800014b0:	8fd9                	or	a5,a5,a4
800014b2:	00fa67b3          	or	a5,s4,a5
800014b6:	0077f713          	andi	a4,a5,7
800014ba:	00d45433          	srl	s0,s0,a3
800014be:	c779                	beqz	a4,8000158c <__divdf3+0x62c>
800014c0:	4709                	li	a4,2
800014c2:	0019e993          	ori	s3,s3,1
800014c6:	2eea8d63          	beq	s5,a4,800017c0 <__divdf3+0x860>
800014ca:	470d                	li	a4,3
800014cc:	2aea8c63          	beq	s5,a4,80001784 <__divdf3+0x824>
800014d0:	0a0a9e63          	bnez	s5,8000158c <__divdf3+0x62c>
800014d4:	00f7f693          	andi	a3,a5,15
800014d8:	4591                	li	a1,4
800014da:	00197713          	andi	a4,s2,1
800014de:	00b68863          	beq	a3,a1,800014ee <__divdf3+0x58e>
800014e2:	00b786b3          	add	a3,a5,a1
800014e6:	00f6b7b3          	sltu	a5,a3,a5
800014ea:	943e                	add	s0,s0,a5
800014ec:	87b6                	mv	a5,a3
800014ee:	00841693          	slli	a3,s0,0x8
800014f2:	2e06d263          	bgez	a3,800017d6 <__divdf3+0x876>
800014f6:	0019e993          	ori	s3,s3,1
800014fa:	1e061b63          	bnez	a2,800016f0 <__divdf3+0x790>
800014fe:	01f71793          	slli	a5,a4,0x1f
80001502:	00100737          	lui	a4,0x100
80001506:	8fd9                	or	a5,a5,a4
80001508:	4701                	li	a4,0
8000150a:	853a                	mv	a0,a4
8000150c:	85be                	mv	a1,a5
8000150e:	0019a073          	csrs	fflags,s3
80001512:	beb5                	j	8000108e <__divdf3+0x12e>
80001514:	f1e670e3          	bgeu	a2,t5,80001414 <__divdf3+0x4b4>
80001518:	9642                	add	a2,a2,a6
8000151a:	01063533          	sltu	a0,a2,a6
8000151e:	952e                	add	a0,a0,a1
80001520:	1479                	addi	s0,s0,-2
80001522:	97aa                	add	a5,a5,a0
80001524:	8c32                	mv	s8,a2
80001526:	b3b5                	j	80001292 <__divdf3+0x332>
80001528:	400a0793          	addi	a5,s4,1024
8000152c:	7fe00693          	li	a3,2046
80001530:	f2f6cce3          	blt	a3,a5,80001468 <__divdf3+0x508>
80001534:	ff0006b7          	lui	a3,0xff000
80001538:	16fd                	addi	a3,a3,-1 # feffffff <__data_source_start+0x7effe1d7>
8000153a:	8c75                	and	s0,s0,a3
8000153c:	01d41693          	slli	a3,s0,0x1d
80001540:	820d                	srli	a2,a2,0x3
80001542:	0426                	slli	s0,s0,0x9
80001544:	7ff7f793          	andi	a5,a5,2047
80001548:	8ed1                	or	a3,a3,a2
8000154a:	8031                	srli	s0,s0,0xc
8000154c:	be0d                	j	8000107e <__divdf3+0x11e>
8000154e:	567d                	li	a2,-1
80001550:	e3f040e3          	bgtz	t6,80001370 <__divdf3+0x410>
80001554:	040f9a63          	bnez	t6,800015a8 <__divdf3+0x648>
80001558:	800007b7          	lui	a5,0x80000
8000155c:	17fd                	addi	a5,a5,-1 # 7fffffff <__TLS0_BASE__+0x3ffbffff>
8000155e:	4709                	li	a4,2
80001560:	0019e993          	ori	s3,s3,1
80001564:	22ea8b63          	beq	s5,a4,8000179a <__divdf3+0x83a>
80001568:	470d                	li	a4,3
8000156a:	1eea8a63          	beq	s5,a4,8000175e <__divdf3+0x7fe>
8000156e:	2e0a8763          	beqz	s5,8000185c <__divdf3+0x8fc>
80001572:	01845613          	srli	a2,s0,0x18
80001576:	01f41713          	slli	a4,s0,0x1f
8000157a:	0017e793          	ori	a5,a5,1
8000157e:	8a05                	andi	a2,a2,1
80001580:	8fd9                	or	a5,a5,a4
80001582:	00164613          	xori	a2,a2,1
80001586:	8005                	srli	s0,s0,0x1
80001588:	0019e993          	ori	s3,s3,1
8000158c:	00197713          	andi	a4,s2,1
80001590:	bfb9                	j	800014ee <__divdf3+0x58e>
80001592:	8536                	mv	a0,a3
80001594:	bb95                	j	80001308 <__divdf3+0x3a8>
80001596:	862a                	mv	a2,a0
80001598:	bb3d                	j	800012d6 <__divdf3+0x376>
8000159a:	c0100793          	li	a5,-1023
8000159e:	00fa1563          	bne	s4,a5,800015a8 <__divdf3+0x648>
800015a2:	00165793          	srli	a5,a2,0x1
800015a6:	bf65                	j	8000155e <__divdf3+0x5fe>
800015a8:	4685                	li	a3,1
800015aa:	41f686b3          	sub	a3,a3,t6
800015ae:	03800793          	li	a5,56
800015b2:	08d7c963          	blt	a5,a3,80001644 <__divdf3+0x6e4>
800015b6:	47fd                	li	a5,31
800015b8:	38d7dc63          	bge	a5,a3,80001950 <__divdf3+0x9f0>
800015bc:	5705                	li	a4,-31
800015be:	41f70733          	sub	a4,a4,t6
800015c2:	02000793          	li	a5,32
800015c6:	00e45733          	srl	a4,s0,a4
800015ca:	00f68763          	beq	a3,a5,800015d8 <__divdf3+0x678>
800015ce:	43ea0793          	addi	a5,s4,1086
800015d2:	00f417b3          	sll	a5,s0,a5
800015d6:	8e5d                	or	a2,a2,a5
800015d8:	00c036b3          	snez	a3,a2
800015dc:	8ed9                	or	a3,a3,a4
800015de:	0076f793          	andi	a5,a3,7
800015e2:	cbf5                	beqz	a5,800016d6 <__divdf3+0x776>
800015e4:	4789                	li	a5,2
800015e6:	0019e993          	ori	s3,s3,1
800015ea:	2afa8163          	beq	s5,a5,8000188c <__divdf3+0x92c>
800015ee:	478d                	li	a5,3
800015f0:	28fa8963          	beq	s5,a5,80001882 <__divdf3+0x922>
800015f4:	280a9163          	bnez	s5,80001876 <__divdf3+0x916>
800015f8:	00f6f793          	andi	a5,a3,15
800015fc:	4711                	li	a4,4
800015fe:	26e78c63          	beq	a5,a4,80001876 <__divdf3+0x916>
80001602:	00e687b3          	add	a5,a3,a4
80001606:	00d7b6b3          	sltu	a3,a5,a3
8000160a:	838d                	srli	a5,a5,0x3
8000160c:	06f6                	slli	a3,a3,0x1d
8000160e:	8edd                	or	a3,a3,a5
80001610:	00197713          	andi	a4,s2,1
80001614:	4781                	li	a5,0
80001616:	4401                	li	s0,0
80001618:	07d2                	slli	a5,a5,0x14
8000161a:	8fc1                	or	a5,a5,s0
8000161c:	077e                	slli	a4,a4,0x1f
8000161e:	8fd9                	or	a5,a5,a4
80001620:	8536                	mv	a0,a3
80001622:	85be                	mv	a1,a5
80001624:	0029e993          	ori	s3,s3,2
80001628:	0019a073          	csrs	fflags,s3
8000162c:	b48d                	j	8000108e <__divdf3+0x12e>
8000162e:	4685                	li	a3,1
80001630:	41f686b3          	sub	a3,a3,t6
80001634:	03800793          	li	a5,56
80001638:	f6d7dfe3          	bge	a5,a3,800015b6 <__divdf3+0x656>
8000163c:	8e41                	or	a2,a2,s0
8000163e:	00197713          	andi	a4,s2,1
80001642:	ce19                	beqz	a2,80001660 <__divdf3+0x700>
80001644:	4789                	li	a5,2
80001646:	0019e993          	ori	s3,s3,1
8000164a:	864a                	mv	a2,s2
8000164c:	00fa8a63          	beq	s5,a5,80001660 <__divdf3+0x700>
80001650:	478d                	li	a5,3
80001652:	4601                	li	a2,0
80001654:	00fa9663          	bne	s5,a5,80001660 <__divdf3+0x700>
80001658:	00197613          	andi	a2,s2,1
8000165c:	00164613          	xori	a2,a2,1
80001660:	077e                	slli	a4,a4,0x1f
80001662:	8532                	mv	a0,a2
80001664:	85ba                	mv	a1,a4
80001666:	0029e993          	ori	s3,s3,2
8000166a:	0019a073          	csrs	fflags,s3
8000166e:	b405                	j	8000108e <__divdf3+0x12e>
80001670:	00181313          	slli	t1,a6,0x1
80001674:	010338b3          	sltu	a7,t1,a6
80001678:	98ae                	add	a7,a7,a1
8000167a:	98fa                	add	a7,a7,t5
8000167c:	1679                	addi	a2,a2,-2
8000167e:	881a                	mv	a6,t1
80001680:	cea892e3          	bne	a7,a0,80001364 <__divdf3+0x404>
80001684:	cf0690e3          	bne	a3,a6,80001364 <__divdf3+0x404>
80001688:	b375                	j	80001434 <__divdf3+0x4d4>
8000168a:	861a                	mv	a2,t1
8000168c:	fea88ce3          	beq	a7,a0,80001684 <__divdf3+0x724>
80001690:	b9d1                	j	80001364 <__divdf3+0x404>
80001692:	c33d                	beqz	a4,800016f8 <__divdf3+0x798>
80001694:	00741713          	slli	a4,s0,0x7
80001698:	16075c63          	bgez	a4,80001810 <__divdf3+0x8b0>
8000169c:	400a0793          	addi	a5,s4,1024
800016a0:	7fe00713          	li	a4,2046
800016a4:	16f75063          	bge	a4,a5,80001804 <__divdf3+0x8a4>
800016a8:	4705                	li	a4,1
800016aa:	b3d1                	j	8000146e <__divdf3+0x50e>
800016ac:	06091d63          	bnez	s2,80001726 <__divdf3+0x7c6>
800016b0:	00741713          	slli	a4,s0,0x7
800016b4:	14075263          	bgez	a4,800017f8 <__divdf3+0x898>
800016b8:	400a0793          	addi	a5,s4,1024
800016bc:	7fe00713          	li	a4,2046
800016c0:	14f74063          	blt	a4,a5,80001800 <__divdf3+0x8a0>
800016c4:	ff000737          	lui	a4,0xff000
800016c8:	177d                	addi	a4,a4,-1 # feffffff <__data_source_start+0x7effe1d7>
800016ca:	8c79                	and	s0,s0,a4
800016cc:	4701                	li	a4,0
800016ce:	b5bd                	j	8000153c <__divdf3+0x5dc>
800016d0:	da0911e3          	bnez	s2,80001472 <__divdf3+0x512>
800016d4:	b1d1                	j	80001398 <__divdf3+0x438>
800016d6:	828d                	srli	a3,a3,0x3
800016d8:	00197713          	andi	a4,s2,1
800016dc:	4781                	li	a5,0
800016de:	4401                	li	s0,0
800016e0:	ba79                	j	8000107e <__divdf3+0x11e>
800016e2:	00460693          	addi	a3,a2,4
800016e6:	00c6b633          	sltu	a2,a3,a2
800016ea:	9432                	add	s0,s0,a2
800016ec:	8636                	mv	a2,a3
800016ee:	bba1                	j	80001446 <__divdf3+0x4e6>
800016f0:	4785                	li	a5,1
800016f2:	4401                	li	s0,0
800016f4:	4681                	li	a3,0
800016f6:	b70d                	j	80001618 <__divdf3+0x6b8>
800016f8:	00860713          	addi	a4,a2,8
800016fc:	00c73633          	sltu	a2,a4,a2
80001700:	9432                	add	s0,s0,a2
80001702:	010006b7          	lui	a3,0x1000
80001706:	8ee1                	and	a3,a3,s0
80001708:	863a                	mv	a2,a4
8000170a:	12068a63          	beqz	a3,8000183e <__divdf3+0x8de>
8000170e:	400a0793          	addi	a5,s4,1024
80001712:	7fe00713          	li	a4,2046
80001716:	faf757e3          	bge	a4,a5,800016c4 <__divdf3+0x764>
8000171a:	4789                	li	a5,2
8000171c:	4701                	li	a4,0
8000171e:	4901                	li	s2,0
80001720:	d4fa94e3          	bne	s5,a5,80001468 <__divdf3+0x508>
80001724:	b995                	j	80001398 <__divdf3+0x438>
80001726:	00860713          	addi	a4,a2,8
8000172a:	00c73633          	sltu	a2,a4,a2
8000172e:	9432                	add	s0,s0,a2
80001730:	010006b7          	lui	a3,0x1000
80001734:	8ee1                	and	a3,a3,s0
80001736:	863a                	mv	a2,a4
80001738:	cae5                	beqz	a3,80001828 <__divdf3+0x8c8>
8000173a:	400a0793          	addi	a5,s4,1024
8000173e:	7fe00713          	li	a4,2046
80001742:	0cf75163          	bge	a4,a5,80001804 <__divdf3+0x8a4>
80001746:	4705                	li	a4,1
80001748:	7ff00793          	li	a5,2047
8000174c:	4601                	li	a2,0
8000174e:	4681                	li	a3,0
80001750:	b991                	j	800013a4 <__divdf3+0x444>
80001752:	f0d86fe3          	bltu	a6,a3,80001670 <__divdf3+0x710>
80001756:	861a                	mv	a2,t1
80001758:	c10696e3          	bne	a3,a6,80001364 <__divdf3+0x404>
8000175c:	b9e1                	j	80001434 <__divdf3+0x4d4>
8000175e:	4705                	li	a4,1
80001760:	12090d63          	beqz	s2,8000189a <__divdf3+0x93a>
80001764:	01845613          	srli	a2,s0,0x18
80001768:	8a05                	andi	a2,a2,1
8000176a:	00164613          	xori	a2,a2,1
8000176e:	8fd9                	or	a5,a5,a4
80001770:	01f41693          	slli	a3,s0,0x1f
80001774:	0077f713          	andi	a4,a5,7
80001778:	8005                	srli	s0,s0,0x1
8000177a:	8fd5                	or	a5,a5,a3
8000177c:	e00708e3          	beqz	a4,8000158c <__divdf3+0x62c>
80001780:	0019e993          	ori	s3,s3,1
80001784:	4705                	li	a4,1
80001786:	d60914e3          	bnez	s2,800014ee <__divdf3+0x58e>
8000178a:	00878713          	addi	a4,a5,8
8000178e:	00f737b3          	sltu	a5,a4,a5
80001792:	943e                	add	s0,s0,a5
80001794:	87ba                	mv	a5,a4
80001796:	4701                	li	a4,0
80001798:	bb99                	j	800014ee <__divdf3+0x58e>
8000179a:	4705                	li	a4,1
8000179c:	10091963          	bnez	s2,800018ae <__divdf3+0x94e>
800017a0:	01845613          	srli	a2,s0,0x18
800017a4:	8a05                	andi	a2,a2,1
800017a6:	00164613          	xori	a2,a2,1
800017aa:	8f5d                	or	a4,a4,a5
800017ac:	00777693          	andi	a3,a4,7
800017b0:	01f41793          	slli	a5,s0,0x1f
800017b4:	8fd9                	or	a5,a5,a4
800017b6:	8005                	srli	s0,s0,0x1
800017b8:	dc068ae3          	beqz	a3,8000158c <__divdf3+0x62c>
800017bc:	0019e993          	ori	s3,s3,1
800017c0:	4701                	li	a4,0
800017c2:	d20906e3          	beqz	s2,800014ee <__divdf3+0x58e>
800017c6:	00878713          	addi	a4,a5,8
800017ca:	00f737b3          	sltu	a5,a4,a5
800017ce:	943e                	add	s0,s0,a5
800017d0:	87ba                	mv	a5,a4
800017d2:	4705                	li	a4,1
800017d4:	bb29                	j	800014ee <__divdf3+0x58e>
800017d6:	838d                	srli	a5,a5,0x3
800017d8:	01d41693          	slli	a3,s0,0x1d
800017dc:	0426                	slli	s0,s0,0x9
800017de:	8edd                	or	a3,a3,a5
800017e0:	8031                	srli	s0,s0,0xc
800017e2:	4781                	li	a5,0
800017e4:	88060de3          	beqz	a2,8000107e <__divdf3+0x11e>
800017e8:	0019f613          	andi	a2,s3,1
800017ec:	00197713          	andi	a4,s2,1
800017f0:	4781                	li	a5,0
800017f2:	880606e3          	beqz	a2,8000107e <__divdf3+0x11e>
800017f6:	b50d                	j	80001618 <__divdf3+0x6b8>
800017f8:	7fe00713          	li	a4,2046
800017fc:	03f75f63          	bge	a4,t6,8000183a <__divdf3+0x8da>
80001800:	4701                	li	a4,0
80001802:	be59                	j	80001398 <__divdf3+0x438>
80001804:	ff000737          	lui	a4,0xff000
80001808:	177d                	addi	a4,a4,-1 # feffffff <__data_source_start+0x7effe1d7>
8000180a:	8c79                	and	s0,s0,a4
8000180c:	4705                	li	a4,1
8000180e:	b33d                	j	8000153c <__divdf3+0x5dc>
80001810:	7fe00713          	li	a4,2046
80001814:	01f75863          	bge	a4,t6,80001824 <__divdf3+0x8c4>
80001818:	4705                	li	a4,1
8000181a:	bebd                	j	80001398 <__divdf3+0x438>
8000181c:	7fe00713          	li	a4,2046
80001820:	fff74ce3          	blt	a4,t6,80001818 <__divdf3+0x8b8>
80001824:	4705                	li	a4,1
80001826:	bb19                	j	8000153c <__divdf3+0x5dc>
80001828:	7fe00713          	li	a4,2046
8000182c:	fff75ce3          	bge	a4,t6,80001824 <__divdf3+0x8c4>
80001830:	4705                	li	a4,1
80001832:	7ff00793          	li	a5,2047
80001836:	4601                	li	a2,0
80001838:	b6b5                	j	800013a4 <__divdf3+0x444>
8000183a:	4701                	li	a4,0
8000183c:	b301                	j	8000153c <__divdf3+0x5dc>
8000183e:	7fe00713          	li	a4,2046
80001842:	fff75ce3          	bge	a4,t6,8000183a <__divdf3+0x8da>
80001846:	4789                	li	a5,2
80001848:	fafa8ce3          	beq	s5,a5,80001800 <__divdf3+0x8a0>
8000184c:	478d                	li	a5,3
8000184e:	4701                	li	a4,0
80001850:	b4fa92e3          	bne	s5,a5,80001394 <__divdf3+0x434>
80001854:	7ff00793          	li	a5,2047
80001858:	4601                	li	a2,0
8000185a:	b6a9                	j	800013a4 <__divdf3+0x444>
8000185c:	4705                	li	a4,1
8000185e:	ffc63613          	sltiu	a2,a2,-4
80001862:	00163613          	seqz	a2,a2
80001866:	9622                	add	a2,a2,s0
80001868:	8261                	srli	a2,a2,0x18
8000186a:	8a05                	andi	a2,a2,1
8000186c:	00164613          	xori	a2,a2,1
80001870:	4a7d                	li	s4,31
80001872:	4685                	li	a3,1
80001874:	b925                	j	800014ac <__divdf3+0x54c>
80001876:	828d                	srli	a3,a3,0x3
80001878:	00197713          	andi	a4,s2,1
8000187c:	4781                	li	a5,0
8000187e:	4401                	li	s0,0
80001880:	bb61                	j	80001618 <__divdf3+0x6b8>
80001882:	04090063          	beqz	s2,800018c2 <__divdf3+0x962>
80001886:	828d                	srli	a3,a3,0x3
80001888:	4401                	li	s0,0
8000188a:	bfb9                	j	800017e8 <__divdf3+0x888>
8000188c:	02091b63          	bnez	s2,800018c2 <__divdf3+0x962>
80001890:	828d                	srli	a3,a3,0x3
80001892:	4701                	li	a4,0
80001894:	4781                	li	a5,0
80001896:	4401                	li	s0,0
80001898:	b341                	j	80001618 <__divdf3+0x6b8>
8000189a:	ff863613          	sltiu	a2,a2,-8
8000189e:	00163613          	seqz	a2,a2
800018a2:	9622                	add	a2,a2,s0
800018a4:	8261                	srli	a2,a2,0x18
800018a6:	8a05                	andi	a2,a2,1
800018a8:	00164613          	xori	a2,a2,1
800018ac:	b5c9                	j	8000176e <__divdf3+0x80e>
800018ae:	ff863613          	sltiu	a2,a2,-8
800018b2:	00163613          	seqz	a2,a2
800018b6:	9622                	add	a2,a2,s0
800018b8:	8261                	srli	a2,a2,0x18
800018ba:	8a05                	andi	a2,a2,1
800018bc:	00164613          	xori	a2,a2,1
800018c0:	b5ed                	j	800017aa <__divdf3+0x84a>
800018c2:	00868793          	addi	a5,a3,8 # 1000008 <retarget.c.918a4a7b+0xff6d67>
800018c6:	00d7b6b3          	sltu	a3,a5,a3
800018ca:	b381                	j	8000160a <__divdf3+0x6aa>
800018cc:	4709                	li	a4,2
800018ce:	0019e993          	ori	s3,s3,1
800018d2:	dcea8de3          	beq	s5,a4,800016ac <__divdf3+0x74c>
800018d6:	470d                	li	a4,3
800018d8:	04ea8563          	beq	s5,a4,80001922 <__divdf3+0x9c2>
800018dc:	020a8363          	beqz	s5,80001902 <__divdf3+0x9a2>
800018e0:	00741693          	slli	a3,s0,0x7
800018e4:	00197713          	andi	a4,s2,1
800018e8:	0406df63          	bgez	a3,80001946 <__divdf3+0x9e6>
800018ec:	ff0006b7          	lui	a3,0xff000
800018f0:	16fd                	addi	a3,a3,-1 # feffffff <__data_source_start+0x7effe1d7>
800018f2:	400a0793          	addi	a5,s4,1024
800018f6:	7fe00593          	li	a1,2046
800018fa:	8c75                	and	s0,s0,a3
800018fc:	b6f5c6e3          	blt	a1,a5,80001468 <__divdf3+0x508>
80001900:	b935                	j	8000153c <__divdf3+0x5dc>
80001902:	00f67693          	andi	a3,a2,15
80001906:	4591                	li	a1,4
80001908:	00197713          	andi	a4,s2,1
8000190c:	dcb69be3          	bne	a3,a1,800016e2 <__divdf3+0x782>
80001910:	00741693          	slli	a3,s0,0x7
80001914:	c006cae3          	bltz	a3,80001528 <__divdf3+0x5c8>
80001918:	7fe00693          	li	a3,2046
8000191c:	b5f6cbe3          	blt	a3,t6,80001472 <__divdf3+0x512>
80001920:	b931                	j	8000153c <__divdf3+0x5dc>
80001922:	dc090be3          	beqz	s2,800016f8 <__divdf3+0x798>
80001926:	00741713          	slli	a4,s0,0x7
8000192a:	ee0759e3          	bgez	a4,8000181c <__divdf3+0x8bc>
8000192e:	ff000737          	lui	a4,0xff000
80001932:	177d                	addi	a4,a4,-1 # feffffff <__data_source_start+0x7effe1d7>
80001934:	400a0793          	addi	a5,s4,1024
80001938:	7fe00693          	li	a3,2046
8000193c:	8c79                	and	s0,s0,a4
8000193e:	4705                	li	a4,1
80001940:	b2f6c7e3          	blt	a3,a5,8000146e <__divdf3+0x50e>
80001944:	bee5                	j	8000153c <__divdf3+0x5dc>
80001946:	7fe00693          	li	a3,2046
8000194a:	b1f6cfe3          	blt	a3,t6,80001468 <__divdf3+0x508>
8000194e:	b6fd                	j	8000153c <__divdf3+0x5dc>
80001950:	41ea0a13          	addi	s4,s4,1054
80001954:	01461733          	sll	a4,a2,s4
80001958:	00d657b3          	srl	a5,a2,a3
8000195c:	00e03733          	snez	a4,a4
80001960:	4605                	li	a2,1
80001962:	b6a9                	j	800014ac <__divdf3+0x54c>
80001964:	00167693          	andi	a3,a2,1
80001968:	4589                	li	a1,2
8000196a:	0019e993          	ori	s3,s3,1
8000196e:	8736                	mv	a4,a3
80001970:	e2ba86e3          	beq	s5,a1,8000179c <__divdf3+0x83c>
80001974:	458d                	li	a1,3
80001976:	deba85e3          	beq	s5,a1,80001760 <__divdf3+0x800>
8000197a:	020a8363          	beqz	s5,800019a0 <__divdf3+0xa40>
8000197e:	8edd                	or	a3,a3,a5
80001980:	01845613          	srli	a2,s0,0x18
80001984:	01f41793          	slli	a5,s0,0x1f
80001988:	8a05                	andi	a2,a2,1
8000198a:	0076f713          	andi	a4,a3,7
8000198e:	00164613          	xori	a2,a2,1
80001992:	8fd5                	or	a5,a5,a3
80001994:	8005                	srli	s0,s0,0x1
80001996:	be070be3          	beqz	a4,8000158c <__divdf3+0x62c>
8000199a:	0019e993          	ori	s3,s3,1
8000199e:	b6fd                	j	8000158c <__divdf3+0x62c>
800019a0:	00f67593          	andi	a1,a2,15
800019a4:	4511                	li	a0,4
800019a6:	eaa59ce3          	bne	a1,a0,8000185e <__divdf3+0x8fe>
800019aa:	8edd                	or	a3,a3,a5
800019ac:	01845613          	srli	a2,s0,0x18
800019b0:	01f41793          	slli	a5,s0,0x1f
800019b4:	8a05                	andi	a2,a2,1
800019b6:	0076f713          	andi	a4,a3,7
800019ba:	00164613          	xori	a2,a2,1
800019be:	8fd5                	or	a5,a5,a3
800019c0:	8005                	srli	s0,s0,0x1
800019c2:	b00719e3          	bnez	a4,800014d4 <__divdf3+0x574>
800019c6:	00197713          	andi	a4,s2,1
800019ca:	b615                	j	800014ee <__divdf3+0x58e>

800019cc <__fixdfsi>:
__fixdfsi():
800019cc:	86aa                	mv	a3,a0
800019ce:	002027f3          	frrm	a5
800019d2:	00100737          	lui	a4,0x100
800019d6:	0145d793          	srli	a5,a1,0x14
800019da:	7ff7f513          	andi	a0,a5,2047
800019de:	3fe00813          	li	a6,1022
800019e2:	fff70793          	addi	a5,a4,-1 # fffff <retarget.c.918a4a7b+0xf6d5e>
800019e6:	8fed                	and	a5,a5,a1
800019e8:	8636                	mv	a2,a3
800019ea:	81fd                	srli	a1,a1,0x1f
800019ec:	00a84963          	blt	a6,a0,800019fe <__fixdfsi+0x32>
800019f0:	e53d                	bnez	a0,80001a5e <__fixdfsi+0x92>
800019f2:	8fd5                	or	a5,a5,a3
800019f4:	cbb5                	beqz	a5,80001a68 <__fixdfsi+0x9c>
800019f6:	4785                	li	a5,1
800019f8:	0017a073          	csrs	fflags,a5
800019fc:	8082                	ret
800019fe:	41d00813          	li	a6,1053
80001a02:	00a85d63          	bge	a6,a0,80001a1c <__fixdfsi+0x50>
80001a06:	c1b5                	beqz	a1,80001a6a <__fixdfsi+0x9e>
80001a08:	41e00713          	li	a4,1054
80001a0c:	08e50363          	beq	a0,a4,80001a92 <__fixdfsi+0xc6>
80001a10:	80000537          	lui	a0,0x80000
80001a14:	47c1                	li	a5,16
80001a16:	0017a073          	csrs	fflags,a5
80001a1a:	8082                	ret
80001a1c:	43300813          	li	a6,1075
80001a20:	40a80833          	sub	a6,a6,a0
80001a24:	48fd                	li	a7,31
80001a26:	8f5d                	or	a4,a4,a5
80001a28:	0508d863          	bge	a7,a6,80001a78 <__fixdfsi+0xac>
80001a2c:	02000793          	li	a5,32
80001a30:	00f80863          	beq	a6,a5,80001a40 <__fixdfsi+0x74>
80001a34:	c0d50793          	addi	a5,a0,-1011 # 7ffffc0d <__TLS0_BASE__+0x3ffbfc0d>
80001a38:	00f717b3          	sll	a5,a4,a5
80001a3c:	00d7e633          	or	a2,a5,a3
80001a40:	41300793          	li	a5,1043
80001a44:	40a786b3          	sub	a3,a5,a0
80001a48:	00d75533          	srl	a0,a4,a3
80001a4c:	00c037b3          	snez	a5,a2
80001a50:	c199                	beqz	a1,80001a56 <__fixdfsi+0x8a>
80001a52:	40a00533          	neg	a0,a0
80001a56:	d3dd                	beqz	a5,800019fc <__fixdfsi+0x30>
80001a58:	0017a073          	csrs	fflags,a5
80001a5c:	8082                	ret
80001a5e:	4501                	li	a0,0
80001a60:	4785                	li	a5,1
80001a62:	0017a073          	csrs	fflags,a5
80001a66:	8082                	ret
80001a68:	8082                	ret
80001a6a:	80000537          	lui	a0,0x80000
80001a6e:	157d                	addi	a0,a0,-1 # 7fffffff <__TLS0_BASE__+0x3ffbffff>
80001a70:	47c1                	li	a5,16
80001a72:	0017a073          	csrs	fflags,a5
80001a76:	8082                	ret
80001a78:	bed50793          	addi	a5,a0,-1043
80001a7c:	00f71733          	sll	a4,a4,a5
80001a80:	00f697b3          	sll	a5,a3,a5
80001a84:	0106d6b3          	srl	a3,a3,a6
80001a88:	00f037b3          	snez	a5,a5
80001a8c:	00d76533          	or	a0,a4,a3
80001a90:	b7c1                	j	80001a50 <__fixdfsi+0x84>
80001a92:	07ae                	slli	a5,a5,0xb
80001a94:	0156d713          	srli	a4,a3,0x15
80001a98:	8fd9                	or	a5,a5,a4
80001a9a:	fbbd                	bnez	a5,80001a10 <__fixdfsi+0x44>
80001a9c:	06ae                	slli	a3,a3,0xb
80001a9e:	e681                	bnez	a3,80001aa6 <__fixdfsi+0xda>
80001aa0:	80000537          	lui	a0,0x80000
80001aa4:	8082                	ret
80001aa6:	87ae                	mv	a5,a1
80001aa8:	80000537          	lui	a0,0x80000
80001aac:	0017a073          	csrs	fflags,a5
80001ab0:	8082                	ret

80001ab2 <__floatunsidf>:
__floatunsidf():
80001ab2:	1141                	addi	sp,sp,-16
80001ab4:	c422                	sw	s0,8(sp)
80001ab6:	c606                	sw	ra,12(sp)
80001ab8:	842a                	mv	s0,a0
80001aba:	cd05                	beqz	a0,80001af2 <__floatunsidf+0x40>
80001abc:	209d                	jal	80001b22 <__clzsi2>
80001abe:	41e00793          	li	a5,1054
80001ac2:	8f89                	sub	a5,a5,a0
80001ac4:	4729                	li	a4,10
80001ac6:	7ff7f793          	andi	a5,a5,2047
80001aca:	02a74e63          	blt	a4,a0,80001b06 <__floatunsidf+0x54>
80001ace:	472d                	li	a4,11
80001ad0:	8f09                	sub	a4,a4,a0
80001ad2:	01550693          	addi	a3,a0,21 # 80000015 <__TEXT_INIT_START__+0x15>
80001ad6:	00e45733          	srl	a4,s0,a4
80001ada:	00d41433          	sll	s0,s0,a3
80001ade:	40b2                	lw	ra,12(sp)
80001ae0:	8522                	mv	a0,s0
80001ae2:	0732                	slli	a4,a4,0xc
80001ae4:	4422                	lw	s0,8(sp)
80001ae6:	8331                	srli	a4,a4,0xc
80001ae8:	07d2                	slli	a5,a5,0x14
80001aea:	8fd9                	or	a5,a5,a4
80001aec:	85be                	mv	a1,a5
80001aee:	0141                	addi	sp,sp,16
80001af0:	8082                	ret
80001af2:	40b2                	lw	ra,12(sp)
80001af4:	8522                	mv	a0,s0
80001af6:	4781                	li	a5,0
80001af8:	4422                	lw	s0,8(sp)
80001afa:	4701                	li	a4,0
80001afc:	07d2                	slli	a5,a5,0x14
80001afe:	8fd9                	or	a5,a5,a4
80001b00:	85be                	mv	a1,a5
80001b02:	0141                	addi	sp,sp,16
80001b04:	8082                	ret
80001b06:	1555                	addi	a0,a0,-11
80001b08:	00a41733          	sll	a4,s0,a0
80001b0c:	4401                	li	s0,0
80001b0e:	40b2                	lw	ra,12(sp)
80001b10:	8522                	mv	a0,s0
80001b12:	0732                	slli	a4,a4,0xc
80001b14:	4422                	lw	s0,8(sp)
80001b16:	8331                	srli	a4,a4,0xc
80001b18:	07d2                	slli	a5,a5,0x14
80001b1a:	8fd9                	or	a5,a5,a4
80001b1c:	85be                	mv	a1,a5
80001b1e:	0141                	addi	sp,sp,16
80001b20:	8082                	ret

80001b22 <__clzsi2>:
__clzsi2():
80001b22:	67c1                	lui	a5,0x10
80001b24:	02f57663          	bgeu	a0,a5,80001b50 <__clzsi2+0x2e>
80001b28:	10053793          	sltiu	a5,a0,256
80001b2c:	0017b793          	seqz	a5,a5
80001b30:	078e                	slli	a5,a5,0x3
80001b32:	02000713          	li	a4,32
80001b36:	8f1d                	sub	a4,a4,a5
80001b38:	00f55533          	srl	a0,a0,a5
80001b3c:	00000797          	auipc	a5,0x0
80001b40:	12c78793          	addi	a5,a5,300 # 80001c68 <__clz_tab>
80001b44:	97aa                	add	a5,a5,a0
80001b46:	0007c503          	lbu	a0,0(a5)
80001b4a:	40a70533          	sub	a0,a4,a0
80001b4e:	8082                	ret
80001b50:	010007b7          	lui	a5,0x1000
80001b54:	02f57063          	bgeu	a0,a5,80001b74 <__clzsi2+0x52>
80001b58:	4741                	li	a4,16
80001b5a:	87ba                	mv	a5,a4
80001b5c:	00f55533          	srl	a0,a0,a5
80001b60:	00000797          	auipc	a5,0x0
80001b64:	10878793          	addi	a5,a5,264 # 80001c68 <__clz_tab>
80001b68:	97aa                	add	a5,a5,a0
80001b6a:	0007c503          	lbu	a0,0(a5)
80001b6e:	40a70533          	sub	a0,a4,a0
80001b72:	8082                	ret
80001b74:	47e1                	li	a5,24
80001b76:	00f55533          	srl	a0,a0,a5
80001b7a:	00000797          	auipc	a5,0x0
80001b7e:	0ee78793          	addi	a5,a5,238 # 80001c68 <__clz_tab>
80001b82:	97aa                	add	a5,a5,a0
80001b84:	0007c503          	lbu	a0,0(a5)
80001b88:	4721                	li	a4,8
80001b8a:	40a70533          	sub	a0,a4,a0
80001b8e:	8082                	ret
